{"singlePage": [], "startSite": "06/19/2024", "filingNum": "", "onePageListNum": 12, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "jasper", "subTitle": "make programming great again", "avatarUrl": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "GMEEK_VERSION": "last", "email": "iamkevinkd@gmail.com", "postListJson": {"P1": {"htmlDir": "docs/post/chu-kui-markdown.html", "labels": ["markdown", "\u57fa\u7840"], "postTitle": "\u521d\u7aa5markdown", "postUrl": "post/chu-kui-markdown.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/1", "commentNum": 0, "wordCount": 1965, "description": "### \u9996\u5148\u5462\uff0c\u8981\u5b66\u4f1amarkdown\u8bed\u6cd5\uff0cmarkdown\u8bed\u6cd5\u975e\u5e38\u5f3a\u5927\uff0c\u5b9e\u5728\u662f\u592a\u9177\u4e86\uff0c\u8feb\u4e0d\u53ca\u5f85\u8981\u770b\u4e00\u770b\u5b83\u7684\u8bed\u6cd5\u4e86\uff01\uff01\r\n\r\n### \u6807\u9898\r\n\r\n\u5c31\u6807\u9898\u6765\u8bf4\u53ea\u9700\u5728\u6587\u5b57\u524d\u9762\u52a0\u4e0a\uff08# \uff09\uff0c\u662f\u7684\uff0c\u4e00\u4e2a#\u53f7\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u540e\u9762\u518d\u8ddf\u4e0a\u6807\u9898\u5373\u53ef\uff0c#\u53f7\u8d8a\u591a \u6807\u9898\u8d8a\u5c0f\r\n\r\n### \u5f15\u7528\r\n\r\n> \u53ea\u9700\u5728\u6587\u672c\u5f00\u5934\u524d\u52a0\u4e0a`> `\u5373\u53ef\uff08\u540e\u9762\u5e26\u7a7a\u683c\uff09\r\n\r\n### \u7c97\u4f53\u3001\u659c\u4f53\u3001\u7c97\u4f53\u659c\u4f53\r\n\r\n\u8fd9\u662f\u659c\u4f53 *\u54c8\u54c8\u54c8\u54c8*  \u6587\u672c\u5757\u524d\u540e\u5404\u52a0\u4e00\u4e2a\u661f\u53f7\r\n\u8fd9\u662f\u52a0\u7c97 **\u5475\u5475\u5475\u5475** \u6587\u672c\u5757\u524d\u540e\u5404\u52a0\u4e24\u4e2a\u661f\u53f7\r\n\u8fd9\u662f\u659c\u4f53\u4e0e\u52a0\u7c97 ***\u563b\u563b\u563b\u563b*** \u6587\u672c\u5757\u524d\u540e\u5404\u52a0\u4e09\u4e2a\u661f\u53f7\r\n\r\n### \u65e0\u5e8f\u5217\u8868\r\n\r\n\u65e0\u5e8f\u5217\u8868\u7684\u4f7f\u7528\u4e5f\u662f\u76f8\u5f53\u6e05\u6670\uff0c\u5c31\u50cfyaml\u7684\u6570\u7ec4\u4e00\u6837\uff0c\u5f53\u7136\u4e86\uff0c\u63a7\u5236\u5c42\u7ea7\u7684\u8bdd\u53ea\u9700\u5728\u524d\u9762\u63a7\u5236\u7a7a\u683c\u6570\u91cf\u5c31\u597d\u4e86\r\n- \u82f9\u679c\r\n- \u9999\u8549\r\n- \u852c\u83dc\r\n  - \u9752\u83dc\r\n  - \u767d\u83dc\r\n\r\n### \u6709\u5e8f\u5217\u8868\r\n\r\n\u6709\u5e8f\u5217\u8868\u53ea\u9700\u5728\u6570\u5b57\u6216\u8005\u7b26\u53f7\u540e\u52a0\u4e0a`. `\u5373\u53ef\uff08\u540e\u9762\u6709\u7a7a\u683c\uff09,\r\n1. \u79d1\u6bd4\r\n2. \u675c\u5170\u7279\r\n3. \u4e54\u4e39\r\n\r\n### \u94fe\u63a5\r\n\r\n\u94fe\u63a5\u7684\u683c\u5f0f\uff1a`[]()` \u65b9\u62ec\u53f7\u91cc\u9762\u662f\u6587\u5b57 \u5706\u62ec\u53f7\u91cc\u9762\u662f\u8fde\u63a5\u5730\u5740\r\n\u6bd4\u5982\uff1a[\u6765\u5427\uff0cnow\uff0cis movie time\uff01\uff01\uff01](https://nunflix.com)\r\n\r\n### \u56fe\u7247\r\n\r\n\u54c7\u54c7\u54c7\u54e6\uff0c\u56fe\u7247\u5c31\u6bd4\u8f83\u523a\u6fc0\u4e86\uff0c\u683c\u5f0f\uff1a`![]()`\uff0c\u57fa\u4e8e\u8fde\u63a5\uff0c\u7531\u611f\u53f9\u53f7\u5f00\u5934\uff0c\u65b9\u62ec\u53f7\u91cc\u9762\u662f\u6587\u5b57(\u5728\u8fd9\u91cc\u662f\u56fe\u7247\u63cf\u8ff0) \u5706\u62ec\u53f7\u91cc\u9762\u662f\u8fde\u63a5\u5730\u5740\r\n\u6bd4\u5982\uff1a\r\n![\u6211\u7684leetcode\u5934\u50cf](https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1692271843.png)\r\n\r\n### \u5206\u5272\u7ebf\r\n\r\n\u683c\u5f0f\uff1a`---` \u5c31\u662f\u4e09\u4e2a\u51cf\u53f7 \u4e09\u4e2a\u51cf\u53f7\u4e0a\u9762\u8fd8\u9700\u7a7a\u4e00\u884c\r\n\r\n---\r\n\r\n### \u8868\u683c\r\n\r\n\u8868\u683c\u5c31\u66f4\u6709\u610f\u601d\u4e86\uff0c\u592anew\u4e86\uff0c\u592a\u6f6e\u6d41\u4e86\r\n\r\n\u683c\u5f0f\uff1a`|`\u7528\u6765\u5206\u5272\uff0c\u7b2c\u4e8c\u884c\u7684`:` \u7528\u6765\u4ee3\u8868\u5de6\u5bf9\u9f50\u8fd8\u662f\u53f3\u5bf9\u9f50\uff0c\u6216\u8005\u4e2d\u95f4\u5bf9\u9f50\r\n\r\n![\u8868\u683c\u683c\u5f0f](https://github.com/iamdurant/iamdurant.github.io/assets/107034526/5410dc3a-1e97-426e-b8b5-a629ca4f25d6)\r\n\r\n\r\n| \u5b66\u53f7 | \u59d3\u540d | \u5e74\u9f84 |\r\n|     :----------     |    :---     |     :--    |\r\n|     2020132238     |      \u8521\u5f90\u5764   |      23   |\r\n|     2020132221     |     \u859b\u5927\u70ae    |    24     |\r\n|     2020132249    |     \u6d32\u9971\u9971    |      23   |\r\n\r\n**\u4e0a\u8ff0\u6709\u6211\u7684idol \u4ee5\u53ca\u6211\u7684\u4e24\u4e2abrother\uff0c\u80fd\u88ab\u6211\u5199\u8fdbblog\uff0c\u662f\u6211\u7684brother\u7684\u798f\u6c14**\r\n\r\n### \u811a\u6ce8\r\n\r\n\u811a\u6ce8\u5c31\u6bd4\u8f83\u53fc\u4e86\u683c\u5f0f\u4e5f\u662f\u57fa\u4e8e\u94fe\u63a5\uff1a`[](\u811a\u6ce8\u89e3\u91ca '\u811a\u6ce8\u540d\u5b57')`\r\n\r\n- [\u5168\u6808\u5de5\u7a0b\u5e08](\u5168\u6808\u5de5\u7a0b\u5e08\u5c31\u662f\u3002", "top": 0, "createdAt": 1718818980, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/zhong-shi-yaml.html", "labels": ["yaml", "\u57fa\u7840"], "postTitle": "\u91cd\u8bc6yaml", "postUrl": "post/zhong-shi-yaml.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/2", "commentNum": 0, "wordCount": 1968, "description": "### spring\u5c06yaml\u683c\u5f0f\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\uff0c\u5fc5\u987b\u5f97\u597d\u597d\u719f\u6089\u4e00\u4e0b\r\n\r\n### \u57fa\u672c\u8bed\u6cd5\r\n\r\n- \u5927\u5c0f\u5199\u654f\u611f\r\n- \u4f7f\u7528\u7f29\u8fdb\u8868\u793a\u5c42\u7ea7\u5173\u7cfb\r\n- \u7f29\u8fdb\u503c\u5141\u8bb8\u4f7f\u7528\u7a7a\u683c\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528tab\r\n- \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u4fdd\u8bc1\u76f8\u540c\u5c42\u7ea7\u7684\u5de6\u5bf9\u9f50\u5373\u53ef\r\n- \u4f7f\u7528`#`\u8868\u793a\u6ce8\u91ca\r\n\r\n### yaml\u5bf9\u8c61\r\n\r\n\u4ee5\u952e\u503c\u5bf9\u7684\u65b9\u5f0f\u8868\u793a \u4e2d\u95f4\u7528`: `\u5206\u9694key & value\uff0c`:`\u53f7\u540e\u9762\u5e26**\u4e00\u4e2a**\u7a7a\u683c\r\n\r\n```yaml\r\nkey: \r\n  value1\r\n  value2\r\n```\r\n\r\n### yaml\u6570\u7ec4\r\n\r\nyaml\u6570\u7ec4\u7528`- `\u53f7\u5f00\u5934\uff0c`:`\u53f7\u540e\u9762\u5e26**\u4e00\u4e2a**\u7a7a\u683c\r\n\r\n```yaml\r\narr: \r\n - a\r\n - b\r\n - c\r\n```\r\n\r\n\u4e5f\u53ef\u4ee5\u8868\u793a\u591a\u7ef4\u6570\u7ec4\uff0c\u9700\u63a7\u5236\u5c42\u7ea7\r\n\r\n```yaml\r\narray: \r\n  -\r\n    - a\r\n    - b\r\n    - c\r\n  -\r\n    - x\r\n    - y\r\n    - z\r\n```\r\n\r\n\u5bf9\u8c61\u6570\u7ec4\uff0c\u5c31\u50cfjava\u4e2d\u7684`Person p1 = new Person('\u859b\u5927\u70ae', 18);Person p2 = new Person('\u8521\u5f90\u5764', 26);Person[] persons = new Person[]{p1, p2};`\r\n\r\n```yaml\r\npersons\r\n  -\r\n    name: \u859b\u5927\u70ae\r\n    age: 18\r\n  -\r\n    name: \u8521\u5f90\u5764\r\n    age: 26\r\n```\r\n\r\n### \u590d\u5408\u7ed3\u6784\r\n\r\n\u5bf9\u8c61\u548c\u6570\u7ec4\u53ef\u4ee5\u6784\u6210\u590d\u6742\u7684\u7ed3\u6784\u5173\u7cfb\r\n\r\n```yaml\r\nlanguages: \r\n  - Java\r\n  - C++\r\n  - Go\r\nWebSites: \r\n  baidu: https://www.baidu.com\r\n  google: https:www.google.com\r\n  bing: https:www.bing.com\r\n```\r\n\r\n\u5bf9\u5e94\u5230json\u4e3a\r\n\r\n```json\r\n{\r\n  'languages': ['Java', 'C++', 'Go'],\r\n  'WebSites': {\r\n    'baidu': 'https://www.baidu.com',\r\n    'google': 'https:www.google.com',\r\n    'bing': 'https:www.bing.com'\r\n  }\r\n}\r\n```\r\n\r\n### \u7eaf\u91cf\r\n\r\n\u7eaf\u91cf\u662f\u6700\u57fa\u672c\u7684\uff0c\u4e0d\u53ef\u518d\u5206\u7684\u503c\r\n- \u5b57\u7b26\u4e32\r\n- \u6574\u6570\r\n- \u6d6e\u70b9\u6570\r\n- \u5e03\u5c14\u503c\r\n- null\r\n- \u65f6\u95f4\uff08date\uff09\r\n- \u65e5\u671f\uff08datetime\uff09\r\n\r\n\u4ee5\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u5404\u7eaf\u91cf\u7684\u4f7f\u7528\r\n\r\n```yaml\r\nstring: \r\n  - \u54c8\u54c8            # \u5b57\u7b26\u4e32\u53ef\u76f4\u63a5\u5199\r\n  - 'good'         # \u6216\u8005\u5355\u5f15\u53f7\u5f15\u8868\u793a\r\n  - '\u897f\u6d77\u5cb8'        # \u6216\u8005\u53cc\u5f15\u53f7\u8868\u793a\r\n  - you jump       # \u5b57\u7b26\u4e32\u53ef\u5199\u591a\u884c\uff0c\u6bcf\u884c\u88ab\u8f6c\u5316\u4e3a\u7a7a\u683c\u5373\u4e3a` you jump i jump\uff01`\r\n    i jump\uff01\r\n\r\nint: \r\n  - 123\r\n  - 0100_1101     # \u4e8c\u8fdb\u5236\u8868\u793a\r\n \r\nfloat: \r\n  - 66.6\r\n  - 45.1231402+e5      # \u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\r\n\r\nboolean: \r\n  - TRUE\r\n  - FALSE\r\n  - True\r\n  - False\r\n  - true\r\n  - false        # \u5176\u5b9e true false \u5168\u5c0f\u5199\u6700\u5e38\u7528\r\n\r\nnull: \r\n  - a\r\n  - ~            # \u4f7f\u7528~\u8868\u793anull\r\n\r\ndate: 2024-06-20       # \u4f7f\u7528ISO-8601\u6807\u51c6\uff1ayyyy-MM-dd\r\n\r\ndatetime: 2024-06-20T16:34:20+09:00     # \u4f7f\u7528ISO-8601\u6807\u51c6\uff1ayyyy-MM-ddTHH:mm:ss+\u65f6\u533a\r\n```\r\n\r\n### \u5f15\u7528\r\n\r\n`&`\u8868\u793a\u951a\u70b9\uff0c`*`\u8868\u793a\u5f15\u7528\u951a\u70b9\uff0c`<<: `\u8868\u793a\u5408\u5e76\u5230\u5f53\u524d\u6570\u636e\u6d41\r\n\r\n```yaml\r\ndatabase: &database\r\n  host: 127.0.0.1\r\n  port: 3306\r\n  user: root\r\n  password: 123456\r\n\r\nmysql: \r\n  <<: *database             # \u82e5\u672a\u751f\u6548 \u5219mardown\u89e3\u6790\u5668\u4e0d\u517c\u5bb9\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\u3002", "top": 0, "createdAt": 1718873156, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/chu-shi-B-shu.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5", "B\u6811", "\u57fa\u7840", "\u9ed1\u9a6c"], "postTitle": "\u521d\u8bc6B\u6811", "postUrl": "post/chu-shi-B-shu.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/3", "commentNum": 0, "wordCount": 16034, "description": "### B\u6811\r\n\r\nB\u6811\uff08B-Tree\uff09\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u7684\u6811\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u5728\u7ef4\u62a4\u6392\u5e8f\u6570\u636e\u7684\u540c\u65f6\uff0c\u652f\u6301\u9ad8\u6548\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\u3002", "top": 0, "createdAt": 1718888659, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/ha-xi-biao.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5", "\u9ed1\u9a6c", "\u54c8\u5e0c\u8868"], "postTitle": "\u54c8\u5e0c\u8868", "postUrl": "post/ha-xi-biao.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/4", "commentNum": 0, "wordCount": 5467, "description": "#### \u5e95\u5c42\u6570\u636e\u7ed3\u6784\r\n\r\n\u54c8\u5e0c\u8868\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u6570\u7ec4\uff0b\u94fe\u8868 \u6216\u8005 \u6570\u7ec4+\u7ea2\u9ed1\u6811\u3002", "top": 0, "createdAt": 1719034276, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-22", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/ji-du-shan-bo-jue.html", "labels": ["\u9605\u8bfb"], "postTitle": "\u57fa\u7763\u5c71\u4f2f\u7235", "postUrl": "post/ji-du-shan-bo-jue.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/5", "commentNum": 0, "wordCount": 256, "description": "#### \u6838\u5fc3\u4eba\u7269\r\n- \u6cd5\u91cc\u4e9a\uff08\u795e\u752b\uff09\r\n- \u57c3\u5fb7\u8499\u00b7\u5510\u6234\u65af\uff08\u4e3b\u4eba\u516c\uff09\r\n- \u5361\u5fb7\u9c81\u65af\r\n- \u6885\u8d5b\u82d4\u4e1d\uff08\u5fb7\u00b7\u83ab\u5c14\u8d5b\u592b\u592b\u4eba\uff09\r\n- \u8d39\u5c14\u5357\uff08\u5fb7\u00b7\u83ab\u5c14\u8d5b\u592b\u4f2f\u7235\uff09\r\n- \u5510\u683c\u62c9\u5c14\r\n- \u5fb7\u00b7\u7ef4\u5c14\u798f\r\n- \u83ab\u96f7\u5c14\r\n\r\n#### \u5176\u4ed6\u4eba\u7269\r\n- \u96c5\u5404\u5e03\uff08\u6c34\u624b\uff09\r\n- \u6731\u4e3d\uff08\u83ab\u96f7\u5c14\u4e4b\u5973\uff09\r\n- \u9a6c\u514b\u897f\u7c73\u5229\u5b89\u00b7\u83ab\u96f7\u5c14\uff08\u83ab\u96f7\u5c14\u4e4b\u5b50\uff09\r\n- \u57c3\u9a6c\u7ebd\u57c3\u5c14\uff08\u6b63\u8ffd\u6c42\u6731\u4e3d\uff09\r\n- \u79d1\u514b\u83b1\u65af\uff08\u83ab\u96f7\u5c14\u516c\u53f8\u51fa\u7eb3\u5458\uff09\r\n- \u4f69\u7eb3\u9686\uff08\u8001\u6c34\u624b\uff09\r\n- \u6208\u739b\u5c14\uff08\u6cd5\u8001\u53f7\u8239\u957f\uff09\r\n- \u963f\u5c14\u8d1d\u00b7\u5fb7\u00b7\u83ab\u5c14\u8d5b\u592b\uff08\u5b50\u7235\uff09\r\n- \u5f17\u6717\u5179\u00b7\u5fb7\u00b7\u57c3\u76ae\u5948\uff08\u7537\u7235\uff09\u3002", "top": 0, "createdAt": 1719138106, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-23", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/pai-xu-suan-fa.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5", "\u6392\u5e8f\u7b97\u6cd5"], "postTitle": "\u6392\u5e8f\u7b97\u6cd5", "postUrl": "post/pai-xu-suan-fa.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/6", "commentNum": 0, "wordCount": 9276, "description": "## \u6700\u57fa\u7840\u7684\u5341\u5927\u6392\u5e8f\u7b97\u6cd5\n\n- \u5192\u6ce1\u6392\u5e8f\n- \u9009\u62e9\u6392\u5e8f\n- \u63d2\u5165\u6392\u5e8f\n- \u5e0c\u5c14\u6392\u5e8f\n- \u5806\u6392\u5e8f\n- \u5f52\u5e76\u6392\u5e8f\n- \u5feb\u901f\u6392\u5e8f\n- \u8ba1\u6570\u6392\u5e8f\n- \u6876\u6392\u5e8f\n- \u57fa\u6570\u6392\u5e8f\n\n### \u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e38\u89c1\u6709\uff1a\n\n![\u5404\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6](https://github.com/iamdurant/iamdurant.github.io/assets/107034526/e9360d33-8b17-45d3-affe-1d0a7527914c)\n\n#### \u5192\u6ce1\u6392\u5e8f\n\n\u91cd\u590d\u904d\u5386\u6570\u7ec4\uff08\u6bcf\u6b21\u904d\u5386\u4e0d\u65ad\u51cf\u5c11\uff09\uff0c\u6bcf\u8f6e\u904d\u5386\u4e0d\u65ad\u6bd4\u8f83\u5e76\u5f80\u540e\u4ea4\u6362\u8f83\u5927\u503c\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6700\u8fd1\u7684\u4e00\u6b21\u4ea4\u6362\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ea4\u6362\u6b21\u6570\uff0c \n\u5728\u90e8\u5206\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ea4\u6362\u6b21\u6570\u3002", "top": 0, "createdAt": 1719328128, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-25", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/tu.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u56fe", "postUrl": "post/tu.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/7", "commentNum": 0, "wordCount": 1113, "description": "### \u56fe\r\n\r\n\u56fe\u7531vertext\u4ee5\u53caedge\u7ec4\u6210\uff0c\u5206\u4e3a\u6709\u5411\u56fe\u548c\u65e0\u5411\u56fe\u3002", "top": 0, "createdAt": 1719488405, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/bian-yi-redis\u3001mysql\u3001nginx.html", "labels": ["\u5b66\u4e60"], "postTitle": "\u7f16\u8bd1redis\u3001mysql\u3001nginx", "postUrl": "post/bian-yi-redis%E3%80%81mysql%E3%80%81nginx.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/8", "commentNum": 0, "wordCount": 1091, "description": "#### \u73af\u5883\r\n\u8bbe\u5907\uff1aredmi6 android linux-deploy chroot\r\n\u67b6\u6784\uff1aarm32\r\n\u65e0\u6cd5\u4f7f\u7528systemctl\uff0c\u65e0\u6cd5\u4f7f\u7528docker\u90e8\u7f72\u5e94\u7528\uff0c\u5e94\u7528\u7684\u9884\u7f16\u8bd1\u7248\u672c\u90fd\u4e3a64\u4f4d\uff0c\u65e0\u6cd5\u4f7f\u7528\r\n\r\n#### \u7f16\u8bd1redis\r\n\u7248\u672c\uff1a7.0.15\r\n\u524d\u7f6e\u4f9d\u8d56\uff1abuild-essential tcl\r\n\u51c6\u5907\u597d\u6e90\u4ee3\u7801\r\n\r\n1. make -j6\r\n2. make PREFIX=/tmp/redis install\r\n\r\n\u8017\u65f6\uff1a10\u5206\u949f\r\n\r\n#### \u7f16\u8bd1mysql\r\n\u7248\u672c\uff1a8.0.38\r\n\u524d\u7f6e\u4f9d\u8d56\uff1abuild-essential cmake libncurses5-dev libssl-dev bison libaio-dev\r\n\u51c6\u5907\u597d\u6e90\u4ee3\u7801\r\n\r\n1. mkdir build && cd build\r\n2. cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=boost `\u6b64\u6b65\u9aa4\u53ef\u80fd\u63d0\u793acmake\u7248\u672c\u8fc7\u4f4e\uff0c\u82e5apt\u5b58\u5728\u6700\u4f4e\u8981\u6c42\u7684\u7248\u672c\u6700\u597d\uff0c\u76f4\u63a5\u5b89\u88c5\uff0c\u5426\u5219\u51c6\u5907\u9700\u8981cmake\u6e90\u7801\uff0c\u7f16\u8bd1\u5b89\u88c5cmake\uff1a1. apt remove cmake 2. ./bootstrap 3. make -j6 4. make install 5. echo 'export PATH=/usr/local/bin:$PATH' >> ~/.bashrc 7. source ~/.bashrc`\r\n4. make -j8\r\n5. make install DESTDIR=/tmp/mysql\r\n\r\n\u8017\u65f6\uff1a\u5c06\u8fd16\u5c0f\u65f6\r\n\u4e0e\u6b64[\u535a\u4e3b](https://cloud.tencent.com/developer/article/1799089)\u7684\u8017\u65f6\u5dee\u4e0d\u591a\uff08\u521a\u5f00\u59cb\u6211\u8fd8\u4ee5\u4e3amysql\u4e5f\u4e0d\u81f3\u4e8e\u7f16\u8bd1\u90a3\u4e48\u4e45\uff09\r\n\r\n**\u610f\u5916\u60c5\u51b5\uff1a\u7f16\u8bd1\u523073%\u9891\u7e41\u6b7b\u673a\uff0c\u68c0\u67e5\u540e\uff0c\u5185\u5b58\u4e0d\u8db3\uff0c\u5229\u7528scene4\u589e\u5927\u4e862GB\u7684swap\u540e\uff0c\u5f97\u4ee5\u7ee7\u7eed\u7f16\u8bd1**\r\n\r\n#### mysql\u7f16\u8bd1\u5b8c\u6210\u6d4b\u8bd5\uff1a\r\n1. `groupadd mysql  **not use**`\r\n2. `useradd mysql -r -g mysql -s /bin/false mysql **not use**`\r\n3. `./mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data`\r\n4. `./mysqld_safe --user=root &`\u3002", "top": 0, "createdAt": 1720333783, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-07", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/git.html", "labels": ["\u5b66\u4e60"], "postTitle": "git", "postUrl": "post/git.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/9", "commentNum": 0, "wordCount": 1674, "description": "### \u6982\u5ff5\u56fe\r\n![image](https://github.com/iamdurant/iamdurant.github.io/assets/107034526/54916701-a7d3-4c9a-b465-b69d0be73426)\r\n\r\n![image](https://github.com/iamdurant/iamdurant.github.io/assets/107034526/a25ae0ec-eea1-4aa8-b86c-b9bae5f8d9af)\r\n\r\n### \u57fa\u7840\r\n\r\n#### \u8bbe\u7f6e\u7528\u6237\u4fe1\u606f\r\n`git config --global user.email '123@bbq.com'`\r\n`git config --global user.name 'kevin'`\r\n\r\n#### git log\r\n`alias gl='git log --pretty=oneline --all --graph --abbrev-commit'`\r\n`git reflog`\r\n\r\n#### \u521d\u59cb\u5316\u4ed3\u5e93\r\n`git init`\r\n\r\n#### staged\r\n`git add <file>...`\r\n\r\n#### \u67e5\u770b\u72b6\u6001\r\n`git status`\r\n\r\n#### \u63d0\u4ea4\r\n`git commit -m '\u63d0\u4ea4\u63cf\u8ff0\u4fe1\u606f'`\r\n\r\n#### \u7248\u672c\u56de\u9000\r\n`git reset --hard commitID`\r\n\r\n#### .gitignore\r\n```text\r\n.gitignore\r\n*.class\r\n*.iml\r\n*.idea\r\n```\r\n\r\n### \u5206\u652f\u76f8\u5173\r\n\r\n#### \u67e5\u770b\u5206\u652f\r\n`git branch`\r\n\r\n#### \u521b\u5efa\u5206\u652f\r\n`git branch <branch_name>`\r\n\r\n#### \u5220\u9664\u5206\u652f\r\n`git branch -d <branch_name>`\r\n`git branch -D <branch_name>` *\u5f3a\u5236\u5220\u9664*\r\n\r\n#### \u5207\u6362\u5206\u652f\r\n```text\r\ngit checkout <branch_name>\r\ngit switch <branch_name>\r\n```\r\n\r\n#### \u521b\u5efa\u5e76\u5207\u6362\u5206\u652f\r\n`git checkout -b <branch_name>`\r\n\r\n#### \u5408\u5e76\u5206\u652f\r\n`git merge <be_merge_branch_name>`\r\n\r\n#### \u901a\u7528\u5206\u652f\u4f7f\u7528\u56fe\r\n![image](https://github.com/iamdurant/iamdurant.github.io/assets/107034526/f0a1c210-5152-4ac9-a989-1e42fa39a0f8)\r\n\r\n### \u8fdc\u7a0b\u4ed3\u5e93\u76f8\u5173\r\n\r\n#### \u5173\u8054\u4ed3\u5e93\r\n`git remote add <name> <git_url>`\r\n\r\n#### \u5173\u8054\u5206\u652f\r\n```text\r\ngit branch --set-upstream=<remote_repository_name>/<remote_branch_name> <current_branch_name>\r\n```\r\n\r\n#### \u67e5\u770b\u5173\u8054\u4ed3\u5e93\r\n`git remote`\r\n\r\n#### \u5173\u8054\u5206\u652f\r\n`git push --set-upstream`\r\n\r\n#### \u63a8\u9001\u4ee3\u7801\r\n`git push <remote_repository_name> <local_branch>:<remote_branch>`\r\n\r\n#### \u62c9\u4ee3\u7801\r\n```text\r\ngit fetch <repository_name> <branch_name>     \u6293\u53d6\u5206\u652f\uff0c\u4e0d\u5408\u5e76\uff0c\u82e5\u4e0d\u6307\u5b9abranch\uff0c\u5219\u6293\u53d6\u6240\u6709branch\r\ngit pull <repository_name> <branch_name>       \u62c9\u53d6\u5206\u652f\uff0c\u5408\u5e76\uff0c\u82e5\u4e0d\u6307\u5b9abranch\uff0c\u5219\u62c9\u53d6\u6240\u6709\u5206\u652f\r\n```\r\n\u3002", "top": 0, "createdAt": 1720400516, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-08", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/spring-boot-data-elasticsearch.html", "labels": ["\u5b66\u4e60"], "postTitle": "spring-boot-data-elasticsearch", "postUrl": "post/spring-boot-data-elasticsearch.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/10", "commentNum": 0, "wordCount": 2364, "description": "##### spring-boot-data-elasticsearch\r\n**\u4f9d\u8d56**\r\n```xml\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-data-elasticsearch</artifactId>\r\n    <version>2.7.6</version>\r\n</dependency>\r\n```\r\n\r\n**annotation**\r\n```java\r\n@Repository\r\n@EnableElasticSearchRepositories(basePackage = '')\r\n@Document(indexName = ''\uff0c createIndex = true)  \u6807\u6ce8\u5b9e\u4f53\u7c7b\r\n@Id  \u6807\u6ce8\u4e3b\u952e\r\n@Field(type = FieldType.Text, analyzer = 'ik_max_word')  \u58f0\u660e\u5b57\u6bb5\u7c7b\u578b\u4ee5\u53ca\u5176\u4ed6\u4fe1\u606f\r\n```\r\n\r\n**interface**\r\n```java\r\n@Repository\r\npublic interface EsSubjectRepo extends ElasticsearchRepository<EsSubjectInfo, Long> {\r\n\r\n}\r\n```\r\n\r\n**\u4ee3\u7801demo**\r\n```java\r\n@Service\r\npublic class EsSubjectInfoServiceImpl implements EsSubjectInfoService {\r\n    @Resource\r\n    private EsSubjectRepo repo;\r\n\r\n    @Resource\r\n    private ElasticsearchRestTemplate restTemplate;\r\n\r\n    @Override\r\n    public void createIndex() {\r\n        IndexOperations indexOps = restTemplate.indexOps(SubjectInfoEs.class);\r\n        indexOps.create();\r\n        Document mapping = indexOps.createMapping(SubjectInfoEs.class);\r\n        indexOps.putMapping(mapping);\r\n    }\r\n\r\n    @Override\r\n    public void addDocs() {\r\n        List<SubjectInfoEs> subjectInfoEs = List.of(\r\n                new SubjectInfoEs(1L, 'mysql\u662f\u4ec0\u4e48', 'mysql\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93', 'wwb', new Date()),\r\n                new SubjectInfoEs(2L, 'redis\u662f\u4ec0\u4e48', 'redis\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u952e\u503c\u5bf9\u578b\u6570\u636e\u5e93', 'wwb', new Date()),\r\n                new SubjectInfoEs(3L, 'es\u662f\u4ec0\u4e48', 'es\u662f\u641c\u7d22\u5f15\u64ce', 'wwb', new Date()));\r\n\r\n        repo.saveAll(subjectInfoEs);\r\n    }\r\n\r\n    @Override\r\n    public void find() {\r\n        Iterable<SubjectInfoEs> all = repo.findAll();\r\n        for (SubjectInfoEs subjectInfoEs : all) {\r\n            System.out.println(subjectInfoEs);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void search() {\r\n        NativeSearchQuery query = new NativeSearchQueryBuilder()\r\n                .withQuery(QueryBuilders.matchQuery('createUser', 'wwb'))\r\n                .build();\r\n\r\n        SearchHits<SubjectInfoEs> searched = restTemplate.search(query, SubjectInfoEs.class);\r\n\r\n        Iterator<SearchHit<SubjectInfoEs>> iterator = searched.stream().iterator();\r\n        while (iterator.hasNext()) {\r\n            SearchHit<SubjectInfoEs> next = iterator.next();\r\n            SubjectInfoEs content = next.getContent();\r\n            System.out.println(content.getSubjectName());\r\n        }\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1720468542, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-09", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/maven.html", "labels": ["\u5b66\u4e60"], "postTitle": "maven", "postUrl": "post/maven.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/11", "commentNum": 0, "wordCount": 918, "description": "maven\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u5c06\u9879\u76ee\u5f00\u53d1\u548c\u7ba1\u7406\u62bd\u8c61\u6210\u4e00\u4e2a\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff08POM\uff09\r\nPOM\uff08Project Object Model\uff09\uff1a\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\r\n\r\n**\u4ed3\u5e93\u7c7b\u578b**\r\n- \u672c\u5730\u4ed3\u5e93\r\n- \u79c1\u670d\r\n- \u4e2d\u592e\u4ed3\u5e93\r\n\r\n**\u5750\u6807**\r\n- groupId\r\n- artifactId\r\n- version\r\n\r\n**command**\r\n- mvn clean\r\n- mvn compile\r\n- mvn test\r\n- mvn package\r\n- mvn install\r\n\r\n**\u4f9d\u8d56\u4f20\u9012\u6027**\r\n- \u76f4\u63a5\u4f9d\u8d56\uff1a\u76f4\u63a5\u901a\u8fc7\u4f9d\u8d56\u914d\u7f6e\u5efa\u7acb\u7684\u4f9d\u8d56\u5173\u7cfb\r\n- \u95f4\u63a5\u4f9d\u8d56\uff1a\u88ab\u4f9d\u8d56\u7684\u8d44\u6e90\u7684\u4f9d\u8d56\r\n\r\n**\u4f9d\u8d56\u4f20\u9012\u51b2\u7a81\u95ee\u9898**\r\n- \u8def\u52b2\u4f18\u5148\uff1a\u5f53\u4f9d\u8d56\u4e2d\u51fa\u73b0\u51b2\u7a81\uff0c\u5c42\u7ea7\u8d8a\u6df1\uff0c\u4f18\u5148\u7ea7\u8d8a\u4f4e\r\n- \u58f0\u660e\u4f18\u5148\uff1a\u5f53\u51b2\u7a81\u5c42\u7ea7\u76f8\u540c\uff0croot\u5148\u58f0\u660e\u4f18\u5148\u7ea7\u9ad8\r\n\r\n**\u4f9d\u8d56\u8303\u56f4**\r\n- compile \u9ed8\u8ba4\r\n- provided \u6e90\u7801 \u6d4b\u8bd5\r\n- test \u6d4b\u8bd5\r\n- runtime \u6253\u5305\r\n\r\n**\u6a21\u5757\u805a\u5408**\r\n```xml\r\n<packaging>pom</packaging>\r\n<modules>\r\n    <module></module>\r\n    <module></module>\r\n</modules>\r\n```\r\n\r\n**\u81ea\u5b9a\u4e49\u5c5e\u6027**\r\n```xml\r\n<properties>\r\n    <spring.web.version></spring.web.version>\r\n    <redis.version></redis.version>\r\n</properties>\r\n```\r\n\r\n**pom\u5c5e\u6027\u89e3\u6790\u5230\u914d\u7f6e\u6587\u4ef6**\r\n```xml\r\n<resources>\r\n    <resource>\r\n        <directory>\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55</directory>\r\n        <filtering>true</filtering>\r\n    <resource>\r\n</resources>\r\n```\r\n\r\n**\u8df3\u8fc7\u6d4b\u8bd5**\r\n```text\r\nmvn package -D skipTests\r\n```\u3002", "top": 0, "createdAt": 1720750323, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-12", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/RocketMQ.html", "labels": ["\u5b66\u4e60"], "postTitle": "RocketMQ", "postUrl": "post/RocketMQ.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/12", "commentNum": 0, "wordCount": 17619, "description": "# RocketMQ api\u5b9e\u6218\r\n\r\n### Consumer\r\n\r\n- \u63a8\u6a21\u5f0f\uff1abroker\u63a8\u9001\u6d88\u606f\u7ed9consumer\r\n- \u62c9\u6a21\u5f0f\uff1aconsumer\u4e3b\u52a8\u4ecebroker\u62c9\u53d6\u6d88\u606f\r\n\r\n> \u63a8\u6a21\u5f0f\u6d88\u8d39\u8005\r\n\r\n```java\r\npackage com.mq.consumer;\r\n\r\nimport org.apache.rocketmq.client.consumer.DefaultMQPushConsumer;\r\nimport org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;\r\nimport org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;\r\n\r\n\r\npublic class SyncConsumer {\r\n    public static void main(String[] args) throws Exception{\r\n        // \u63a8\u6a21\u5f0f(boroker(\u4e3b\u52a8\u63a8\u9001) -> consumer)\r\n        DefaultMQPushConsumer consumer = new DefaultMQPushConsumer('SyncConsumer');\r\n\r\n        // set name server addr\r\n        consumer.setNamesrvAddr('172.24.192.134:9876');\r\n\r\n        // subscribe\r\n        consumer.subscribe('wwb', '*');\r\n\r\n        // consume message\r\n        consumer.setMessageListener((MessageListenerConcurrently) (list, consumeConcurrentlyContext) -> {\r\n            for(int i = 0;i < list.size();i++) {\r\n                System.out.println('\u6d88\u8d39\u4e00\u6761\u6d88\u606f');\r\n            }\r\n\r\n            return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\r\n        });\r\n\r\n        consumer.start();\r\n        System.out.println('\u6d88\u8d39\u8005\u542f\u52a8\u6210\u529f...');\r\n    }\r\n}\r\n```\r\n\r\n> \u62c9\u6a21\u5f0f\u6d88\u8d39\u8005\uff08@deprecated\uff09\r\n\r\n```java\r\npackage com.mq.consumer;\r\n\r\nimport org.apache.rocketmq.client.consumer.DefaultMQPullConsumer;\r\nimport org.apache.rocketmq.client.consumer.PullResult;\r\nimport org.apache.rocketmq.client.consumer.PullStatus;\r\nimport org.apache.rocketmq.client.consumer.store.ReadOffsetType;\r\nimport org.apache.rocketmq.client.exception.MQBrokerException;\r\nimport org.apache.rocketmq.client.exception.MQClientException;\r\nimport org.apache.rocketmq.common.message.MessageQueue;\r\nimport org.apache.rocketmq.remoting.exception.RemotingException;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\n\r\npublic class PullConsumer {\r\n    @Deprecated\r\n    public static void main(String[] args) throws Exception{\r\n        DefaultMQPullConsumer consumer = new DefaultMQPullConsumer('PullConsumer');\r\n\r\n        // set name server addr\r\n        consumer.setNamesrvAddr('172.24.192.134:9876');\r\n\r\n        // set register topic\r\n        consumer.setRegisterTopics(new HashSet<>(List.of('wwb', 'async_wwb', 'TopicTest')));\r\n\r\n        consumer.start();\r\n\r\n        while(true) {\r\n            consumer.getRegisterTopics().forEach(t -> {\r\n                try {\r\n                    Set<MessageQueue> queues = consumer.fetchSubscribeMessageQueues(t);\r\n                    queues.forEach(q -> {\r\n                        try {\r\n                            long offset = consumer.getOffsetStore().readOffset(q, ReadOffsetType.READ_FROM_MEMORY);\r\n                            if(offset < 0) offset = consumer.getOffsetStore().readOffset(q, ReadOffsetType.READ_FROM_STORE);\r\n                            if(offset < 0) offset = consumer.maxOffset(q);\r\n                            if(offset < 0) offset = 0;\r\n\r\n                            PullResult result = consumer.pull(q, '*', offset, 32);\r\n                            if(result.getPullStatus() == PullStatus.FOUND) {\r\n                                System.out.println('\u6d88\u606f\u6d88\u8d39\u6210\u529f');\r\n                                consumer.updateConsumeOffset(q, result.getNextBeginOffset());\r\n                            }\r\n                        } catch (MQClientException | MQBrokerException | RemotingException | InterruptedException e) {\r\n                            throw new RuntimeException(e);\r\n                        }\r\n                    });\r\n                } catch (MQClientException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n> \u62c9\u6a21\u5f0f\u6d88\u8d39\u8005\r\n\r\n```java\r\npackage com.mq.consumer;\r\n\r\nimport org.apache.rocketmq.client.consumer.DefaultLitePullConsumer;\r\nimport org.apache.rocketmq.common.message.MessageExt;\r\nimport org.apache.rocketmq.common.message.MessageQueue;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic class LitePullConsumer {\r\n    public static void main(String[] args) throws Exception{\r\n        pullAssignQueue();\r\n    }\r\n\r\n    /**\r\n     * \u968f\u673a\u62c9\u53d6\u67d0\u4e2a\u961f\u5217\u7684\u6d88\u606f\r\n     * @throws Exception\r\n     */\r\n    static void pullRandomQueue() throws Exception{\r\n        DefaultLitePullConsumer consumer = new DefaultLitePullConsumer('LitePullConsumer');\r\n        consumer.setNamesrvAddr('172.24.192.134:9876');\r\n        consumer.subscribe('wwb', '*');\r\n\r\n        consumer.start();\r\n\r\n        while(true) {\r\n            List<MessageExt> list = consumer.poll();\r\n            list.forEach(m -> {\r\n                byte[] body = m.getBody();\r\n                System.out.println('\u6d88\u606f\u6d88\u8d39\u6210\u529f: ' + new String(body, StandardCharsets.UTF_8));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u6307\u5b9a\u62c9\u53d6\u67d0\u4e2a\u961f\u5217\u7684\u6d88\u606f\r\n     * @throws Exception\r\n     */\r\n    static void pullAssignQueue() throws Exception{\r\n        DefaultLitePullConsumer consumer = new DefaultLitePullConsumer('LitePullConsumer2');\r\n        consumer.setNamesrvAddr('172.24.192.134:9876');\r\n        consumer.start();\r\n\r\n        Collection<MessageQueue> queues = consumer.fetchMessageQueues('wwb');\r\n        ArrayList<MessageQueue> li = new ArrayList<>(queues);\r\n        consumer.assign(li);\r\n        consumer.seek(li.get(1), 0);\r\n\r\n        while(true) {\r\n            List<MessageExt> list = consumer.poll();\r\n            list.forEach(m -> {\r\n                System.out.println(m);\r\n                System.out.println('\u6d88\u606f\u6d88\u8d39\u6210\u529f: ' + new String(m.getBody(), StandardCharsets.UTF_8));\r\n            });\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n### Producer\r\n\r\n**\u6d88\u606f\u53d1\u9001\u7684\u4e09\u79cd\u65b9\u5f0f**\r\n\r\n- \u540c\u6b65\u53d1\u9001\uff1a\u7b49\u5f85\u6d88\u606f\u8fd4\u56de\u540e\u518d\u7ee7\u7eed\u8fdb\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u5e76\u53d1\u8f83\u4f4e\u4ee5\u53ca\u53ef\u9760\u6027\u8f83\u9ad8\u7684\u573a\u666f\r\n- \u5f02\u6b65\u53d1\u9001\uff1a\u4e0d\u7b49\u5f85\u6d88\u606f\u8fd4\u56de\u76f4\u63a5\u8fdb\u884c\u540e\u7eed\u4ee3\u7801\u6d41\u7a0b\uff0c\u9002\u7528\u4e8e\u5e76\u53d1\u9ad8\u7684\u573a\u666f\r\n- \u5355\u5411\u53d1\u9001\uff1a\u53ea\u8d1f\u8d23\u53d1\u9001\uff0c\u4e0d\u7ba1\u6d88\u606f\u662f\u5426\u53d1\u9001\u6210\u529f\uff0c\u9002\u7528\u4e8e\u65e5\u5fd7\u7b49\u7279\u6b8a\u573a\u666f\r\n\r\n\r\n\r\n> \u540c\u6b65\u751f\u4ea7\u8005\uff1a\r\n\r\n```java\r\npackage com.mq.producer;\r\n\r\nimport org.apache.rocketmq.client.producer.DefaultMQProducer;\r\nimport org.apache.rocketmq.client.producer.SendResult;\r\nimport org.apache.rocketmq.common.message.Message;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Random;\r\n\r\npublic class SyncProducer {\r\n    public static void main(String[] args) throws Exception{\r\n        DefaultMQProducer producer = new DefaultMQProducer('SyncProducer');\r\n\r\n        // set name server addr\r\n        producer.setNamesrvAddr('172.24.192.134:9876');\r\n\r\n        producer.start();\r\n\r\n        for(int i = 0;i < 10;i++) {\r\n            Message mess = new Message(\r\n                    'wwb',\r\n                    String.valueOf(i),\r\n                    String.valueOf(new Random().nextInt(10)).getBytes(StandardCharsets.UTF_8));\r\n            SendResult result = producer.send(mess);\r\n            System.out.println(result);\r\n        }\r\n\r\n        producer.shutdown();\r\n    }\r\n}\r\n```\r\n\r\n\r\n> \u5f02\u6b65\u751f\u4ea7\u8005\r\n\r\n```java\r\npackage com.mq.producer;\r\n\r\nimport org.apache.rocketmq.client.producer.DefaultMQProducer;\r\nimport org.apache.rocketmq.client.producer.SendCallback;\r\nimport org.apache.rocketmq.client.producer.SendResult;\r\nimport org.apache.rocketmq.common.message.Message;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Arrays;\r\nimport java.util.Random;\r\nimport java.util.concurrent.CountDownLatch;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class AsyncProducer {\r\n    public static void main(String[] args) throws Exception{\r\n        DefaultMQProducer producer = new DefaultMQProducer('AsyncProducer');\r\n\r\n        // set name server addr\r\n        producer.setNamesrvAddr('172.24.192.134:9876');\r\n\r\n        producer.start();\r\n        CountDownLatch cd = new CountDownLatch(10);\r\n        for(int i = 0;i < 10;i++) {\r\n            Message mess = new Message(\r\n                    'async_wwb',\r\n                    String.valueOf(i),\r\n                    String.valueOf(new Random().nextInt(10)).getBytes(StandardCharsets.UTF_8));\r\n            producer.send(mess, new SendCallback() {\r\n                @Override\r\n                public void onSuccess(SendResult sendResult) {\r\n                    System.out.println('\u6d88\u606f\u53d1\u9001\u6210\u529f: ' + sendResult);\r\n                    cd.countDown();\r\n                }\r\n\r\n                @Override\r\n                public void onException(Throwable throwable) {\r\n                    System.out.println('\u6d88\u606f\u53d1\u9001\u5931\u8d25' + Arrays.toString(throwable.getStackTrace()));\r\n                    cd.countDown();\r\n                }\r\n            });\r\n        }\r\n\r\n        boolean await = cd.await(5, TimeUnit.SECONDS);\r\n        if(!await) {\r\n            System.out.println('\u90e8\u5206\u6d88\u606f\u4e22\u5931');\r\n        }\r\n        producer.shutdown();\r\n    }\r\n}\r\n```\r\n\r\n> \u5355\u5411\u751f\u4ea7\u8005\r\n\r\n```java\r\npackage com.mq.producer;\r\n\r\nimport org.apache.rocketmq.client.producer.DefaultMQProducer;\r\nimport org.apache.rocketmq.common.message.Message;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.Random;\r\n\r\npublic class OneWayProducer {\r\n    public static void main(String[] args) throws Exception{\r\n        DefaultMQProducer producer = new DefaultMQProducer('OneWayProducer');\r\n\r\n        // set name server addr\r\n        producer.setNamesrvAddr('172.24.192.134:9876');\r\n\r\n        producer.start();\r\n\r\n        for(int i = 0;i < 10;i++) {\r\n            Message mess = new Message(\r\n                    'wwb',\r\n                    String.valueOf(i),\r\n                    String.valueOf(new Random().nextInt(10)).getBytes(StandardCharsets.UTF_8));\r\n            producer.sendOneway(mess);\r\n        }\r\n\r\n        producer.shutdown();\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n### \u6d88\u606f\u7c7b\u578b\r\n\r\n- **Normal\uff08\u666e\u901a\u6d88\u606f\uff09**\r\n- **FIFO\uff08\u987a\u5e8f\u6d88\u606f\uff09**\r\n- **Delay\uff08\u5ef6\u8fdf\u6d88\u606f\uff09**\r\n\r\n\u5ef6\u8fdf\u6d88\u606f\u5177\u670918\u4e2a\u7ea7\u522b\uff1a1s\u52302\u4e2a\u5c0f\u65f6\r\n\r\n\u51e0\u4e2a\u6709\u5173\u7684\u65b9\u6cd5\uff1a\r\n\r\n1. setDelayTimeLevel() \uff1a\u6839\u636e\u5ef6\u8fdf\u7ea7\u522b\u5ef6\u8fdf\u6295\u9012\r\n\r\n2. setDelayTimeMs() \uff1a\u81ea\u5b9a\u4e49\u5ef6\u8fdf\u6beb\u79d2\u6570\r\n\r\n3. setDelayTimeSec() \uff1a\u81ea\u5b9a\u4e49\u5ef6\u8fdf\u79d2\u6570\r\n\r\n4. setDeliverTimeMs() \uff1a\u5728\u67d0\u4e2a\u65f6\u95f4\u6233\u6295\u9012\r\n\r\n|\u5ef6\u8fdf\u7ea7\u522b|\u5ef6\u8fdf\u65f6\u95f4|\r\n|--- |--- |\r\n|1|1s|\r\n|2|5s|\r\n|3|10s|\r\n|4|30s|\r\n|5|1m|\r\n|6|2m|\r\n|7|3m|\r\n|8|4m|\r\n|9|5m|\r\n|10|6m|\r\n|11|7m|\r\n|12|8m|\r\n|13|9m|\r\n|14|10m|\r\n|15|20m|\r\n|16|30m|\r\n|17|1h|\r\n|18|2h|\r\n\r\n- **Transaction\uff08\u4e8b\u52a1\u6d88\u606f\uff09**\r\n\r\nRocketMQ \u7684\u4e8b\u52a1\u6d88\u606f\u7528\u4e8e\u4fdd\u8bc1\u6d88\u606f\u548c\u672c\u5730\u4e8b\u52a1\u64cd\u4f5c\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002", "top": 0, "createdAt": 1720756909, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-12", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/Mysql.html", "labels": ["\u5b66\u4e60"], "postTitle": "Mysql", "postUrl": "post/Mysql.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/13", "commentNum": 0, "wordCount": 572, "description": "**\u884c\u8bb0\u5f55\u683c\u5f0f**\r\n- antelope\r\n  - redundant\r\n  - compact\r\n- barracuda\r\n    - dynamic\r\n    - compressed\r\n\r\n**compact**\r\n\u53ef\u53d8\u957f\u5b57\u6bb5\u957f\u5ea6(1\u62162\u4e2abyte)    NULL\u503c(bitmap)    \u5934\u90e8(5\u4e2abyte)\r\n\r\n**\u4e09\u4e2a\u9690\u85cf\u5b57\u6bb5**\r\n- ROWID(6 byte)\uff0c\u5728\u6ca1\u6709\u6307\u5b9aprimary key\u65f6\u624d\u5b58\u5728\r\n- \u4e8b\u52a1ID(6 byte)\r\n- \u56de\u6eda\u6307\u9488(7 byte)\r\n\r\n**buffer pool**\r\n\u7531\u63a7\u5236\u5757\u4e0e\u7f13\u5b58\u9875\u7ec4\u6210\r\n\r\nHash\r\n```text\r\n\u7531\u8868\u7a7a\u95f4\u53ca\u9875\u53f7\u7ec4\u6210key\uff0c\u63a7\u5236\u5757\u5f15\u7528\u4e3avalue\uff0cO(1)\u7684\u65f6\u95f4\u5224\u65ad\u8981\u67e5\u8be2\u7684\u6570\u636e\u662f\u5426\u4f4d\u4e8ebuffer pool\r\n```\r\n\r\n\u5404\u94fe\u8868\u53ca\u5176\u4f5c\u7528\r\n- free\u94fe\r\n```text\r\n\u53cc\u5411\u94fe\u8868\uff0c\u8282\u70b9\u5b58\u50a8\u7f13\u5b58\u9875\u7b49\u4fe1\u606f\r\n```\r\n- Flush\u94fe\r\n```text\r\n\u53cc\u5411\u94fe\u8868\uff0c\u8282\u70b9\u5b58\u50a8\u7f13\u5b58\u9875\u7b49\u4fe1\u606f\uff0c\u5f53\u6570\u636e\u88ab\u66f4\u65b0\u65f6\uff0c\u88ab\u6807\u8bb0\u4e3adirty page\uff0c\u76f8\u5e94\u7684\u63a7\u5236\u5757\u52a0\u5165flush\u94fe\uff0c\u7531\u540e\u53f0\u7ebf\u7a0b\u5f02\u6b65\u5237\u76d8\r\n```\r\n- LRU\u94fe\r\n```text\r\n\u53cc\u5411\u94fe\u8868\uff0c\u8282\u70b9\u5b58\u50a8\u7f13\u5b58\u9875\u7b49\u4fe1\u606f\uff0c\u5206\u4e3ayoung\u6570\u636e\u533a\u3001old \u6570\u636e\u533a\uff0c\u5f53buffer pool\u6ee1\u65f6\uff0c\u6dd8\u6c70\u6570\u636e\r\n```\u3002", "top": 0, "createdAt": 1720756927, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-12", "dateLabelColor": "#bc4c00"}, "P14": {"htmlDir": "docs/post/dubbo.html", "labels": ["\u5b66\u4e60"], "postTitle": "dubbo", "postUrl": "post/dubbo.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/14", "commentNum": 0, "description": "", "wordCount": 0, "top": 0, "createdAt": 1720756970, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-12", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/she-ji-mo-shi.html", "labels": ["\u5b66\u4e60"], "postTitle": "\u8bbe\u8ba1\u6a21\u5f0f", "postUrl": "post/she-ji-mo-shi.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/15", "commentNum": 0, "wordCount": 7805, "description": "#### \u521b\u5efa\u578b\u6a21\u5f0f\n\n##### \u5355\u4f8b\n\n**\u5e38\u89c1\u7684\u5355\u4f8b\uff1a**\n\n- `RunTime`\n\n- Spring\u4e2d\u7684`ApplicationContext`\n\n```java\npublic class SingleTon {\n    private static volatile SingleTon single;\n\n    private SingleTon() {\n\n    }\n\n    public static SingleTon getInstance() {\n        if(single == null) {\n            synchronized(SingleTon.class) {\n                if(single == null) single = new SingleTon();\n            }\n        }\n\n        return single;\n    }\n}\n```\n\n\n\n##### \u7b80\u5355\u5de5\u5382\n\n**\u4e3b\u8981\u89d2\u8272\uff1a**\n\n- \u62bd\u8c61\u4ea7\u54c1\n- \u5177\u4f53\u4ea7\u54c1\n- \u7b80\u5355\u5de5\u5382\n\n> \u6240\u6709\u4ea7\u54c1\u90fd\u4ea4\u7531\u7b80\u5355\u5de5\u5382\u521b\u5efa\uff0c\u82e5\u9700\u65b0\u589e\u4ea7\u54c1\uff0c\u5219\u9700\u8981\u6539\u52a8\u7b80\u5355\u5de5\u5382\u7684\u4ee3\u7801\n\n```java\n// \u62bd\u8c61\u4ea7\u54c1\npublic interface Phone {\n}\n\n// \u5177\u4f53\u4ea7\u54c1\npublic class XiaoMi implements Phone{\n}\n\n// \u5177\u4f53\u4ea7\u54c1\npublic class HuaWei implements Phone{\n}\n\n// \u7b80\u5355\u5de5\u5382\npublic class PhoneFactory {\n    public static Phone createPhone(String type) {\n        if(type == null) return null;\n        if(type.equals('XiaoMi')) return new XiaoMi();\n        else if(type.equals('HuaWei')) return new HuaWei();\n        return null;\n    }\n}\n```\n\n\n\n##### \u5de5\u5382\u65b9\u6cd5\n\n**\u4e3b\u8981\u89d2\u8272\uff1a**\n\n- \u62bd\u8c61\u4ea7\u54c1\n- \u5177\u4f53\u4ea7\u54c1\n- \u62bd\u8c61\u5de5\u5382\n- \u5177\u4f53\u5de5\u5382\n\n> \u5bf9\u4e8e\u7b80\u5355\u5de5\u5382\uff0c\u65b0\u589e\u4ea7\u54c1\u9700\u8981\u6539\u52a8\u4ee3\u7801\u3002", "top": 0, "createdAt": 1720887233, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-07-14", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/kuai-su-mi.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u5feb\u901f\u5e42", "postUrl": "post/kuai-su-mi.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/16", "commentNum": 0, "wordCount": 356, "description": "#### \u5feb\u901f\u5e42\u5b9e\u73b0\r\n\r\n- \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\r\n- \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn) \u6808\u7684\u5f00\u9500\r\n\r\n```java\r\nprivate int fastPow(int val, int p) {\r\n        if(p == 0) return 1;\r\n        if(p == 1) return val;\r\n\r\n        int half = fastPow(val, p >> 1);\r\n        int result;\r\n        if((p & 1) == 0) result = half * half;\r\n        else result = half * half * val;\r\n\r\n        return result;\r\n    }\r\n```\u3002", "top": 0, "createdAt": 1725984951, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-11", "dateLabelColor": "#bc4c00"}, "P17": {"htmlDir": "docs/post/wei-yun-suan.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u4f4d\u8fd0\u7b97", "postUrl": "post/wei-yun-suan.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/17", "commentNum": 0, "wordCount": 84, "description": "#### n & n - 1\r\n`n & n - 1`  n\u51cf\u53bb\u6700\u4f4e\u4f4d\u76842\u7684\u5e42\r\n\r\n#### n & -n\r\n`n & -n`  \u83b7\u53d6\u7ec4\u6210n\u7684\u4e8c\u8fdb\u5236\u4e2d\u7684\u6700\u4f4e\u4f4d\u76842\u7684\u5e42\u3002", "top": 0, "createdAt": 1726227456, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-13", "dateLabelColor": "#bc4c00"}, "P18": {"htmlDir": "docs/post/er-wei-qian-zhui-he.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u4e8c\u7ef4\u524d\u7f00\u548c", "postUrl": "post/er-wei-qian-zhui-he.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/18", "commentNum": 0, "wordCount": 158, "description": "\u6c42\u77e9\u9635\u7684\u5b50\u77e9\u9635\u548c\r\n- \u65b9\u6cd5\u4e00\uff1a\u5bf9\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u505a\u524d\u7f00\u548c\uff0c\u6c42\u5b50\u77e9\u9635\u5143\u7d20\u548c\u65f6\u8fd8\u9700\u8981\u904d\u5386\u6bcf\u4e00\u884c\uff0c\u5e76\u4e0d\u80fd\u505a\u5230O(1)\u7684\u67e5\u8be2\u65f6\u95f4\r\n\r\n- \u65b9\u6cd5\u4e8c\uff1a\u9884\u5904\u7406\u4e8c\u7ef4\u77e9\u9635\u524d\u7f00\u548c\uff0c\u5c06\u6bcf\u6b21\u67e5\u8be2\u4f18\u5316\u5230O(1)\r\n![\u539f\u7406\u56fe](https://pic.leetcode.cn/1692152740-dSPisw-matrix-sum.png)\u3002", "top": 0, "createdAt": 1726235567, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-13", "dateLabelColor": "#bc4c00"}, "P19": {"htmlDir": "docs/post/cha-fen-shu-zu-\uff08-yi-wei-\u3001-er-wei-\uff09.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u5dee\u5206\u6570\u7ec4\uff08\u4e00\u7ef4\u3001\u4e8c\u7ef4\uff09", "postUrl": "post/cha-fen-shu-zu-%EF%BC%88-yi-wei-%E3%80%81-er-wei-%EF%BC%89.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/19", "commentNum": 0, "wordCount": 871, "description": "#### \u4e00\u7ef4\u5dee\u5206\r\n\u5dee\u5206map\u5199\u6cd5\uff1a\r\n- \u4e3b\u8981\u7528\u5230treemap\u7684merge\u65b9\u6cd5\r\n```java\r\npublic boolean carPooling(int[][] trips, int capacity) {\r\n        TreeMap<Integer, Integer> d = new TreeMap<>();\r\n        for (int[] t : trips) {\r\n            int num = t[0], from = t[1], to = t[2];\r\n            d.merge(from, num, Integer::sum);\r\n            d.merge(to, -num, Integer::sum);\r\n        }\r\n        int s = 0;\r\n        for (int v : d.values()) {\r\n            s += v;\r\n            if (s > capacity) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n```\r\n\r\n#### \u4e8c\u7ef4\u5dee\u5206\r\n##### \u539f\u7406\u56fe\r\n- \u521d\u59cb\u5316\r\n![\u4e8c\u7ef4\u5dee\u5206\u539f\u7406\u56fe](https://pic.leetcode.cn/1702439895-HZofag-LC2132-c.png)\r\n\r\n- \u6062\u590d\r\n  - \u5bf9\u884c\u4f9d\u6b21\u505a\u524d\u7f00\u548c\r\n  - \u5bf9\u5217\u4f9d\u6b21\u505a\u524d\u7f00\u548c\r\n\r\n\r\n#### \u79bb\u6563\u5316 + \u4e8c\u7ef4\u5dee\u5206\r\n[leetcode\uff1aLCP74.\u6700\u5f3a\u795d\u798f\u529b\u573a](https://leetcode.cn/problems/xepqZ5/)\r\n\u6b64\u9898\u56f0\u60d1\u70b9\uff1a\r\n- \u5b58\u5728\u975e\u6574\u6570 \uff0c\u89e3\u51b3\uff1a\u5c06\u6240\u6709\u5750\u6807 * 2\r\n- \u5750\u6807\u8303\u56f4\u5f88\u5927\uff0c\u89e3\u51b3\uff1a\u79bb\u6563\u5316\r\n  - \u79bb\u6563\u5316\u6b65\u9aa4\uff1a\r\n    - \u6392\u5e8f\r\n    - \u53bb\u91cd\r\n    - \u91cd\u65b0\u7f16\u53f7\r\n\r\n\u3002", "top": 0, "createdAt": 1726324296, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-14", "dateLabelColor": "#bc4c00"}, "P20": {"htmlDir": "docs/post/xian-duan-shu.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u7ebf\u6bb5\u6811", "postUrl": "post/xian-duan-shu.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/20", "commentNum": 0, "wordCount": 5412, "description": "#### \u624b\u6413\u4e24\u5957\u7ebf\u6bb5\u6811\u677f\u5b50\r\n\r\n- **\u53ef\u4ee5\u533a\u95f4\u4fee\u6539/\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\u6a21\u677f**\r\n```java\r\nclass SegmentTree {\r\n    int[] arr;\r\n    int[] d;\r\n    int[] b;\r\n    boolean[] v;\r\n\r\n    public SegmentTree(int[] arr) {\r\n        this.arr = arr;\r\n        d = new int[arr.length * 4];\r\n        b = new int[arr.length * 4];\r\n        v = new boolean[arr.length * 4];\r\n\r\n        buildTree(0, arr.length - 1, 0, d, arr);\r\n    }\r\n\r\n    private void buildTree(int s, int t, int p, int[] d, int[] arr) {\r\n        if(s == t) {\r\n            d[p] = arr[s];\r\n            return;\r\n        }\r\n\r\n        int m = (s + t) >> 1;\r\n        buildTree(s, m, 2 * p + 1, d, arr);\r\n        buildTree(m + 1, t, 2 * p + 2, d, arr);\r\n        d[p] = d[2 * p + 1] + d[2 * p + 2];\r\n    }\r\n\r\n    public void rangeUpdate(int l, int r, int c) {\r\n        rangeUpdate(l, r, c, 0, arr.length - 1, 0, d, b, v);\r\n    }\r\n\r\n    private void rangeUpdate(int l, int r, int c, int s, int t, int p, int[] d, int[] b, boolean[] v) {\r\n        if(s >= l && t <= r) {\r\n            d[p] = c * ((t - s) + 1);\r\n            b[p] = c;\r\n            v[p] = true;\r\n            return;\r\n        }\r\n\r\n        int m = (s + t) >> 1;\r\n        if(v[p]) {\r\n            tagDown(d, b, v, m, s, t, p);\r\n        }\r\n\r\n        if(m >= l) rangeUpdate(l, r, c, s, m, 2 * p + 1, d, b, v);\r\n        if(m + 1 <= r) rangeUpdate(l, r, c, m + 1, t, 2 * p + 2, d, b, v);\r\n        d[p] = d[2 * p + 1] + d[2 * p + 2];\r\n    }\r\n\r\n    public int rangeSum(int l, int r) {\r\n        return rangeSum(l, r, 0, arr.length - 1, 0, d, b, v);\r\n    }\r\n\r\n    private int rangeSum(int l, int r, int s, int t, int p, int[] d, int[] b, boolean[] v) {\r\n        if(s >= l && t <= r) {\r\n            return d[p];\r\n        }\r\n\r\n        int sum = 0;\r\n        int m = (s + t) >> 1;\r\n        if(v[p]) {\r\n            tagDown(d, b, v, m, s, t, p);\r\n        }\r\n\r\n        if(m >= l) sum += rangeSum(l, r, s, m, 2 * p + 1, d, b, v);\r\n        if(m + 1 <= r) sum += rangeSum(l, r, m + 1, t, 2 * p + 2, d, b, v);\r\n\r\n        return sum;\r\n    }\r\n\r\n    private void tagDown(int[] d, int[] b, boolean[] v, int m, int s, int t, int p) {\r\n        d[2 * p + 1] = b[p] * ((m - s) + 1);\r\n        d[2 * p + 2] = b[p] * ((t - (m + 1)) + 1);\r\n        b[2 * p + 1] = b[p];\r\n        b[2 * p + 2] = b[p];\r\n        v[2 * p + 1] = true;\r\n        v[2 * p + 2] = true;\r\n        b[p] = 0;\r\n        v[p] = false;\r\n    }\r\n}\r\n```\r\n\r\n- **\u53ef\u4ee5\u533a\u95f4\u52a0/\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\u6a21\u677f**\r\n```java\r\nclass SegmentTree {\r\n    int[] arr;\r\n    int[] d;\r\n    int[] b;\r\n\r\n    public SegmentTree(int[] arr) {\r\n        this.arr = arr;\r\n        d = new int[arr.length * 4];\r\n        b = new int[arr.length * 4];\r\n\r\n        // build tree\r\n        buildSegmentTree(0, arr.length - 1, 0, arr, d);\r\n    }\r\n\r\n    /**\r\n     * \u7ebf\u6bb5\u6811\u521d\u59cb\u5316\r\n     *\r\n     * @param s     \u533a\u95f4\u5de6\u8fb9\u754c\r\n     * @param t     \u533a\u95f4\u6709\u8fb9\u754c\r\n     * @param p     \u533a\u95f4\u7f16\u53f7\r\n     * @param arr   \u539f\u59cb\u6570\u7ec4\r\n     * @param d     \u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\r\n     */\r\n    private void buildSegmentTree(int s, int t, int p, int[] arr, int[] d) {\r\n        if(s == t) {\r\n            d[p] = arr[s];\r\n            return;\r\n        }\r\n\r\n        int m = (s + t) >> 1;\r\n        buildSegmentTree(s, m, 2 * p + 1, arr, d);\r\n        buildSegmentTree(m + 1, t, 2 * p + 2, arr , d);\r\n        d[p] = d[2 * p + 1] + d[2 * p + 2];\r\n    }\r\n\r\n    /**\r\n     * \u5916\u90e8\u8c03\u7528\u65b9\u6cd5\r\n     *\r\n     * @param l     \u66f4\u65b0\u5de6\u8fb9\u754c\r\n     * @param r     \u66f4\u65b0\u53f3\u8fb9\u754c\r\n     * @param c     \u589e\u91cf\r\n     */\r\n    public void rangeUpdate(int l, int r, int c) {\r\n        rangeUpdate(l, r, c, 0, arr.length - 1, 0, d, b);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param l     \u66f4\u65b0\u5de6\u8fb9\u754c\r\n     * @param r     \u66f4\u65b0\u53f3\u8fb9\u754c\r\n     * @param c     \u589e\u91cf\r\n     * @param s     \u533a\u95f4\u5de6\u8fb9\u754c\r\n     * @param t     \u533a\u95f4\u53f3\u8fb9\u754c\r\n     * @param p     \u533a\u95f4\u7f16\u53f7\r\n     * @param d     \u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\r\n     * @param b     \u6807\u8bb0\u6570\u7ec4\r\n     */\r\n    private void rangeUpdate(int l, int r, int c, int s, int t, int p, int[] d, int[] b) {\r\n        if(s >= l && t <= r) {\r\n            d[p] += c * ((t - s) + 1);\r\n            b[p] += c;\r\n            return;\r\n        }\r\n\r\n        int m = (s + t) >> 1;\r\n        if(s != t && b[p] != 0) {\r\n            tagDown(d, b, m, s, t, p);\r\n        }\r\n\r\n        if(m >= l) rangeUpdate(l, r, c, s, m, 2 * p + 1, d, b);\r\n        if(m + 1 <= r) rangeUpdate(l, r, c, m + 1, t, 2 * p + 2, d, b);\r\n        d[p] = d[2 * p + 1] + d[2 * p + 2];\r\n    }\r\n\r\n    /**\r\n     *  \u5916\u90e8\u8c03\u7528\u65b9\u6cd5\r\n     * @param l     \u67e5\u8be2\u5de6\u8fb9\u754c\r\n     * @param r     \u67e5\u8be2\u53f3\u8fb9\u754c\r\n     * @return      \u533a\u95f4\u548c\r\n     */\r\n    public int rangeSum(int l, int r) {\r\n        return rangeSum(l, r, 0, arr.length - 1, 0, d, b);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param l     \u67e5\u8be2\u5de6\u8fb9\u754c\r\n     * @param r     \u67e5\u8be2\u53f3\u8fb9\u754c\r\n     * @param s     \u533a\u95f4\u5de6\u8fb9\u754c\r\n     * @param t     \u533a\u95f4\u53f3\u8fb9\u754c\r\n     * @param p     \u533a\u95f4\u7f16\u53f7\r\n     * @param d     \u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\r\n     * @param b     \u6807\u8bb0\u6570\u7ec4\r\n     * @return      \u533a\u95f4\u548c\r\n     */\r\n    private int rangeSum(int l, int r, int s, int t, int p, int[] d, int[] b) {\r\n        if(s >= l && t <= r) {\r\n            return d[p];\r\n        }\r\n\r\n        int sum = 0;\r\n        int m = (s + t) >> 1;\r\n        if(s != t && b[p] != 0) {\r\n            tagDown(d, b, m, s, t, p);\r\n        }\r\n\r\n        if(m >= l) sum += rangeSum(l, r, s, m, 2 * p + 1, d, b);\r\n        if(m + 1 <= r) sum += rangeSum(l, r, m + 1, t, 2 * p + 2, d, b);\r\n\r\n        return sum;\r\n    }\r\n\r\n    private void tagDown(int[] d, int[] b, int m, int s, int t, int p) {\r\n        d[2 * p + 1] += b[p] * ((m - s) + 1);\r\n        d[2 * p + 2] += d[p] * ((t - (m + 1)) + 1);\r\n        b[2 * p + 1] += b[p];\r\n        b[2 * p + 2] += b[p];\r\n        b[p] = 0;\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1726496319, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-16", "dateLabelColor": "#bc4c00"}, "P21": {"htmlDir": "docs/post/sao-miao-xian.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u626b\u63cf\u7ebf", "postUrl": "post/sao-miao-xian.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/21", "commentNum": 0, "wordCount": 3, "description": "\u672a\u63a5\u89e6\u3002", "top": 0, "createdAt": 1726496344, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-16", "dateLabelColor": "#bc4c00"}, "P22": {"htmlDir": "docs/post/zui-da-pin-lv-zhan.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u6700\u5927\u9891\u7387\u6808", "postUrl": "post/zui-da-pin-lv-zhan.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/22", "commentNum": 0, "wordCount": 812, "description": "#### \u6700\u5927\u9891\u7387\u6808\r\n\u5b9e\u73b0\u65b9\u6cd5\r\n- \u4e3a\u6bcf\u4e00\u4e2a\u9891\u7387\u7ef4\u62a4\u4e00\u4e2a\u6808\uff08map\uff09\r\n- \u4e3a\u5143\u7d20\u7ef4\u62a4\u8ba1\u6570\u5668\uff08map\uff09\r\n- push\u5143\u7d20\u65f6\u6ce8\u610fmax\u4ee5\u53ca\u9891\u7387\u6808\u7684\u66f4\u65b0\r\n- pop\u5143\u7d20\u65f6\u6ce8\u610fmax\u3001\u9891\u7387\u6808\u7684\u5220\u9664\u4ee5\u53ca\u8ba1\u6570\u5668\u7684\u66f4\u65b0\r\n\r\n\u4ee3\u7801\u5982\u4e0b\r\n```java\r\nclass FreqStack {\r\n    Map<Integer, Integer> map = new HashMap<>();\r\n    Map<Integer, ArrayDeque<Integer>> freqMap = new HashMap<>();\r\n    int max = 0;\r\n\r\n    public FreqStack() {}\r\n    \r\n    public void push(int val) {\r\n        int freq = map.getOrDefault(val, 0) + 1;\r\n        max = Math.max(max, freq);\r\n        map.put(val, freq);\r\n        freqMap.computeIfAbsent(freq, k -> new ArrayDeque<>()).push(val);\r\n    }\r\n    \r\n    public int pop() {\r\n        ArrayDeque<Integer> stack = freqMap.get(max);\r\n        int re = stack.pop();\r\n        map.put(re, map.get(re) - 1);\r\n        if(stack.isEmpty()) {\r\n            freqMap.remove(max--);\r\n        }\r\n\r\n        return re;\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1726598434, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-18", "dateLabelColor": "#bc4c00"}, "P23": {"htmlDir": "docs/post/ou-ji-li-de-suan-fa-qiu-zui-da-gong-yue-shu-\uff08GCD\uff09.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u6700\u5927\u516c\u7ea6\u6570\uff08GCD\uff09", "postUrl": "post/ou-ji-li-de-suan-fa-qiu-zui-da-gong-yue-shu-%EF%BC%88GCD%EF%BC%89.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/23", "commentNum": 0, "wordCount": 776, "description": "\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u4e3a\u975e\u4e92\u8d28\u6570\u7684\u8ba1\u7b97\u539f\u7406\u57fa\u4e8e \u6700\u5927\u516c\u7ea6\u6570 (GCD)\u3002", "top": 0, "createdAt": 1726661119, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-18", "dateLabelColor": "#bc4c00"}, "P24": {"htmlDir": "docs/post/java-da-bao.html", "labels": ["\u5b66\u4e60"], "postTitle": "java\u6253\u5305", "postUrl": "post/java-da-bao.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/24", "commentNum": 0, "wordCount": 530, "description": "```java\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-maven-plugin</artifactId>\r\n            <version>3.1.2</version> <!-- \u4f7f\u7528\u5408\u9002\u7684 Spring Boot \u7248\u672c -->\r\n            <executions>\r\n                <execution>\r\n                    <goals>\r\n                        <goal>repackage</goal> <!-- \u786e\u4fdd\u5c06\u6240\u6709\u4f9d\u8d56\u6253\u5305\u8fdb JAR -->\r\n                    </goals>\r\n                </execution>\r\n            </executions>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```\u3002", "top": 0, "createdAt": 1726701373, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-09-19", "dateLabelColor": "#bc4c00"}, "P25": {"htmlDir": "docs/post/shu-zhuang-shu-zu.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u6811\u72b6\u6570\u7ec4", "postUrl": "post/shu-zhuang-shu-zu.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/25", "commentNum": 0, "wordCount": 1153, "description": "#### \u6811\u72b6\u6570\u7ec4\r\n\r\n**\u6a21\u677f**\r\n```java\r\nstatic class FenwickTree {\r\n        int[] arr;\r\n        int[] b;\r\n        int n;\r\n\r\n        public FenwickTree(int[] nums) {\r\n            this.arr = nums;\r\n            n = nums.length;\r\n            init(nums);\r\n        }\r\n\r\n        private void init(int[] nums) {\r\n            b = new int[n + 1];\r\n            for(int i = 1;i <= nums.length;i++) {\r\n                int k = i;\r\n                while(k <= n) {\r\n                    b[k] += nums[i - 1];\r\n                    k += (k & -k);\r\n                }\r\n            }\r\n        }\r\n\r\n        public void update(int i, int val) {\r\n            int tmp = arr[i];\r\n            arr[i] = val;\r\n            int k = i + 1;\r\n            while(k <= n) {\r\n                b[k] -= tmp;\r\n                b[k] += val;\r\n                k += (k & -k);\r\n            }\r\n        }\r\n\r\n        public int sum(int l, int r) {\r\n            return sum(r + 1) - sum(l);\r\n        }\r\n\r\n        private int sum(int r) {\r\n            int sum = 0;\r\n            while(r > 0) {\r\n                sum += b[r];\r\n                r -= (r & -r);\r\n            }\r\n\r\n            return sum;\r\n        }\r\n    }\r\n```\u3002", "top": 0, "createdAt": 1728393404, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-10-08", "dateLabelColor": "#bc4c00"}, "P26": {"htmlDir": "docs/post/minio-ji-chu.html", "labels": ["\u5b66\u4e60"], "postTitle": "minio\u57fa\u7840", "postUrl": "post/minio-ji-chu.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/26", "commentNum": 0, "wordCount": 4394, "description": "**\u5b98\u7f51**\uff1a[\u5b98\u7f51](https://min.io)\r\n\r\n**\u6587\u6863**\uff1a[\u6587\u6863](https://minio-java.min.io)\r\n\r\n**\u5feb\u901f\u5f00\u59cb**\uff1a[quickStart](https://www.minio.org.cn/docs/minio/linux/developers/java/minio-java.html#minio-java-quickstart)\r\n\r\n\r\n\r\n**\u5b89\u88c5**\r\n\r\n```shell\r\nwget https://dl.min.io/server/minio/release/linux-amd64/minio\r\nchmod +x minio\r\nMINIO_ROOT_USER=wwb MINIO_ROOT_PASSWORD=pubgM666 ./minio server /mnt/min_data --console-address ':9001'\r\n```\r\n\r\n**access_key and secret_key**\r\n\r\n```text\r\naccess_key: Um89W6wboxiiVeLUiYBn\r\nsecret_key: 4MmSQrEy5t8xpIbACZLmnYhidaOcIEt246GiSPRM\r\n```\r\n\r\n**\u4e0a\u4f20\u6587\u4ef6demo**\r\n\r\n```java\r\npackage com.minio;\r\n\r\nimport io.minio.*;\r\n\r\npublic class Exec {\r\n    public static void main(String[] args) throws Exception{\r\n        MinioClient client = new MinioClient.Builder().endpoint('http://172.24.192.134:9000')\r\n                .credentials('Um89W6wboxiiVeLUiYBn', '4MmSQrEy5t8xpIbACZLmnYhidaOcIEt246GiSPRM')\r\n                .build();\r\n\r\n        boolean exists = client.bucketExists(BucketExistsArgs.builder().bucket('test').build());\r\n        if(!exists) {\r\n            client.makeBucket(MakeBucketArgs.builder().bucket('test').build());\r\n        }\r\n\r\n        client.uploadObject(UploadObjectArgs.builder()\r\n                .object('RocketMQ api\u5b9e\u6218.md')\r\n                .filename('C:\\\\Users\\\\wwb\\\\Desktop\\\\typora_record\\\\RocketMQ api\u5b9e\u6218.md')\r\n                .bucket('test')\r\n                .build());\r\n\r\n        client.close();\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n**minio\u5bf9\u8c61\u5c5e\u6027\uff1a**\r\n\r\n- object name\uff1a\u5bf9\u8c61\u7684\u552f\u4e00\u540d\u79f0\r\n\r\n- bucket name\uff1a\u5bf9\u8c61\u6240\u5728\u7684\u5b58\u50a8\u6876\u540d\u79f0\r\n\r\n- content type\uff1a\u5bf9\u8c61\u7684mime\u7c7b\u578b\uff0c\u4f8b\u5982\uff1aimage/jpeg\u3001application//pdf\r\n\r\n- content length\uff1a\u5bf9\u8c61\u7684\u5927\u5c0f\uff0c\u4ee5byte\u4e3a\u5355\u4f4d\r\n\r\n- last modified\uff1a\u5bf9\u8c61\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\r\n\r\n- user-defined metadata\uff1a\u5bf9\u8c61\u7684\u81ea\u5b9a\u4e49\u5143\u6570\u636e\uff0c\u4f8b\u5982\u4f5c\u8005\u3001\u521b\u5efa\u65e5\u671f\u7b49\r\n\r\n- etag\uff1a\u5bf9\u8c61\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u54c8\u5e0c\u503c\r\n\r\n  \r\n\r\n**spring-boot\u5bf9\u6587\u4ef6\u4e0a\u4f20\u5927\u5c0f\u9ed8\u8ba4\u5927\u5c0f\u4e3a1MB\uff0c\u9700\u8981\u8986\u76d6\u914d\u7f6e**\r\n\r\n```yaml\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 1TB\r\n      max-request-size: 1TB\r\n```\r\n\r\n\r\n\r\n**\u83b7\u53d6\u5bf9\u8c61\u94fe\u63a5**\r\n\r\n```java\r\nString url = client.getPresignedObjectUrl(GetPresignedObjectUrlArgs\r\n                .builder()\r\n                .bucket('test')\r\n                .object('RocketMQ api\u5b9e\u6218.md')\r\n                .method(Method.GET)\r\n                .expiry(5, TimeUnit.DAYS)\r\n                .build());\r\n```\r\n\r\n\r\n\r\n**\u5217\u51fa\u6587\u4ef6\u5217\u8868**\r\n\r\n```java\r\n/**\r\n * \u6d4b\u8bd5\u5217\u51fa\u6587\u4ef6\u5217\u8868\r\n * @throws Exception \u5f02\u5e38\r\n */\r\nstatic void testListObjs() throws Exception{\r\n    Iterable<Result<Item>> objs = client.listObjects(ListObjectsArgs.builder()\r\n                                             .bucket('test')\r\n                                             .prefix('video/a')\r\n                                             .recursive(true)\r\n                                             .build());\r\n\r\n    for (Result<Item> obj : objs) {\r\n        System.out.println(obj.get().objectName());\r\n    }\r\n\r\n    client.close();\r\n}\r\n```\r\n\r\n\r\n\r\n**\u5217\u51fa\u6240\u6709bucket**\r\n\r\n```java\r\n/**\r\n * \u6d4b\u8bd5\u5217\u51fa\u6240\u6709bucket\r\n * @throws Exception \u5f02\u5e38\r\n */\r\nstatic void testListBuckets() throws Exception {\r\n    List<Bucket> buckets = client.listBuckets();\r\n    buckets.forEach(b -> System.out.println(b.name()));\r\n    client.close();\r\n}\r\n```\r\n\r\n\r\n\r\n**\u4e0b\u8f7d\u6587\u4ef6**\r\n\r\n```java\r\n/**\r\n * \u6d4b\u8bd5\u4e0b\u8f7d\u6587\u4ef6\r\n * @throws Exception \u5f02\u5e38\r\n */\r\nstatic void testGetObj() throws Exception {\r\n    GetObjectResponse resp = client.getObject(GetObjectArgs.builder()\r\n                                      .bucket('test')\r\n                                      .object('9666489052.mp4')\r\n                                      .build());\r\n\r\n    byte[] data = resp.readAllBytes();\r\n    FileOutputStream outputStream = new FileOutputStream(resp.object());\r\n    outputStream.write(data);\r\n    outputStream.flush();\r\n    outputStream.close();\r\n\r\n    client.close();\r\n}\r\n```\r\n\r\n\r\n\r\n**\u590d\u5236\u6587\u4ef6**\r\n\r\n```java\r\n/**\r\n * \u6d4b\u8bd5\u590d\u5236\u6587\u4ef6\r\n * @throws Exception \u5f02\u5e38\r\n */\r\nstatic void testCopyObj() throws Exception {\r\n    CopySource src = new CopySource.Builder().bucket('test').object('9666489052.mp4').build();\r\n    client.copyObject(CopyObjectArgs.builder()\r\n                      .source(src)\r\n                      .bucket('learn')\r\n                      .object('\u7f8e\u5973\u821e\u8e48.mp4')\r\n                      .build());\r\n\r\n    client.close();\r\n}\r\n```\r\n\r\n\r\n\r\n**\u5220\u9664\u6587\u4ef6**\r\n\r\n```java\r\n/**\r\n * \u6d4b\u8bd5\u5220\u9664\u6587\u4ef6\r\n * @throws Exception \u5f02\u5e38\r\n */\r\nstatic void testDeleteObj() throws Exception {\r\n    client.removeObject(RemoveObjectArgs.builder()\r\n                        .bucket('learn')\r\n                        .object('\u7f8e\u5973\u821e\u8e48.mp4')\r\n                        .build());\r\n\r\n    client.close();\r\n}\r\n```\r\n\r\n\u3002", "top": 0, "createdAt": 1730522601, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-11-02", "dateLabelColor": "#bc4c00"}, "P27": {"htmlDir": "docs/post/java-ri-zhi-kuang-jia.html", "labels": ["\u5b66\u4e60"], "postTitle": "java\u65e5\u5fd7\u6846\u67b6", "postUrl": "post/java-ri-zhi-kuang-jia.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/27", "commentNum": 0, "wordCount": 5056, "description": "#### java\u73b0\u6709\u7684\u65e5\u5fd7\u6846\u67b6\u6709\u54ea\u4e9b\r\n\r\n- JUL(java util logging)\r\n- logback\r\n- log4j\r\n- log4j2\r\n- JCL(jakarta commons logging)\r\n- slf4j(simple logging facade for java)\r\n\r\n\r\n\r\n#### \u65e5\u5fd7\u95e8\u9762\u6280\u672f\u7684\u4f18\u70b9\r\n\r\n1. \u9762\u5411\u63a5\u53e3\u5f00\u53d1\uff0c\u4e0d\u518d\u4f9d\u8d56\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\r\n2. \u901a\u8fc7\u5bfc\u5165\u4e0d\u540c\u7684\u65e5\u5fd7\u5b9e\u73b0\u7c7b\uff0c\u53ef\u4ee5\u7075\u6d3b\u7684\u5207\u6362\u65e5\u5fd7\u6846\u67b6\r\n3. \u7edf\u4e00api\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u5b66\u4e60\u548c\u4f7f\u7528\r\n4. \u7edf\u4e00\u914d\u7f6e\u4fbf\u4e8e\u9879\u76ee\u65e5\u5fd7\u7684\u7ba1\u7406\r\n\r\n\r\n\r\n#### JUL(java util logging)\r\n\r\nJUL\uff0cjava\u539f\u751f\u65e5\u5fd7\u6846\u67b6\uff0c\u4e0d\u9700\u8981\u5f15\u5165\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\uff0c\u4f7f\u7528\u7b80\u5355\u65b9\u4fbf\uff0c\u4e00\u822c\u5728\u5c0f\u578b\u5e94\u7528\u4e2d\u4f7f\u7528\uff0c\u4e3b\u6d41\u9879\u76ee\u4e2d\u5f88\u5c11\u4f7f\u7528\r\n\r\n##### JUL\u67b6\u6784\r\n\r\n- Application\uff1ajava\u5e94\u7528\u7a0b\u5e8f\r\n- loggers\uff1a\u8bb0\u5f55\u5668\uff0capplication\u901a\u8fc7\u83b7\u53d6logger\u5bf9\u8c61\uff0c\u8c03\u7528\u5176api\u6765\u53d1\u5e03\u65e5\u5fd7\u6d88\u606f\r\n- appenders\uff1a\u4e5f\u79f0\u4e3ahandlers\uff0c\u6bcf\u4e2alogger\u90fd\u4f1a\u5173\u8054\u4e00\u7ec4handlers\uff0clogger\u4f1a\u5c06\u65e5\u5fd7\u4ea4\u7ed9handlers\u5904\u7406handlers\u662f\u4e00\u4e2a\u62bd\u8c61\uff0c\u5176\u5177\u4f53\u7684\u5b9e\u73b0\u51b3\u5b9a\u4e86\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f4d\u7f6e\u53ef\u4ee5\u662f\u63a7\u5236\u53f0\u3001\u6587\u4ef6\u3001\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u65e5\u5fd7\u670d\u52a1\u6216\u64cd\u4f5c\u7cfb\u7edf\u65e5\u5fd7\u7b49\r\n- layouts\uff1a\u4e5f\u79f0\u4e3aformatters\uff0c\u8d1f\u8d23\u5bf9\u65e5\u5fd7\u8fdb\u884c\u8f6c\u6362\u6216\u8005\u683c\u5f0f\u5316\r\n- level\uff1a\u6bcf\u6761\u65e5\u5fd7\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u65e5\u5fd7\u7ea7\u522b\r\n- filters\uff1a\u8fc7\u6ee4\u5668\uff0c\u6839\u636e\u9700\u8981\u81ea\u5b9a\u4e49\u54ea\u4e9b\u6d88\u606f\u4f1a\u88ab\u8bb0\u5f55\uff0c\u54ea\u4e9b\u6d88\u606f\u4f1a\u88ab\u653e\u8fc7\r\n\r\n##### \u65e5\u5fd7\u7ea7\u522b(\u7531\u9ad8\u5230\u4f4e)\r\n\r\n1. severe\r\n2. warning\r\n3. info(\u9ed8\u8ba4\u7684\u65e5\u5fd7\u7ea7\u522b)\r\n4. config\r\n5. fine\r\n6. finer\r\n7. finest\r\n\r\n##### \u4e3a\u4ec0\u4e48\u8981\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u7ea7\r\n\r\n\u65e0\u8bba\u662f\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230`console`\u8fd8\u662f\u6587\u4ef6\uff0c\u90fd\u4f1a\u5e26\u6765\u6d88\u8017\uff0c\u964d\u4f4e\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u662f\uff0c\u65e5\u5fd7\u53c8\u662f\u8c03\u8bd5\u6216\u8005\u4e86\u89e3\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e0d\u53ef\u6216\u7f3a\u7684\u624b\u6bb5\uff0c\u901a\u8fc7\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u7ea7\u5904\u7406\uff0c\u5728\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u7edf\u4e00\u7684\u7ba1\u7406\uff0c\u8fd9\u6837\u4ee3\u7801\u4e2d\u65e5\u5fd7\u90e8\u5206\u5c31\u53ef\u4ee5\u4e0d\u7528\u5220\u9664\uff0c\u53c8\u53ef\u4ee5\u63a7\u5236\u8f93\u51fa\u54ea\u4e9b\u65e5\u5fd7\r\n\r\n```java\r\npublic static void main(String[] args) {\r\n    Logger logger = Logger.getLogger('multi');\r\n\r\n    logger.setUseParentHandlers(false);\r\n\r\n    ConsoleHandler consoleHandler = new ConsoleHandler();\r\n    consoleHandler.setLevel(Level.ALL);\r\n    SimpleFormatter simpleFormatter = new SimpleFormatter();\r\n    consoleHandler.setFormatter(simpleFormatter);\r\n    logger.addHandler(consoleHandler);\r\n\r\n    logger.setLevel(Level.ALL);\r\n\r\n    logger.severe('>>>> severe');\r\n    logger.warning('>>>> warning');\r\n    logger.info('>>>> info');\r\n    logger.config('>>>> config');\r\n    logger.fine('>>>> fine');\r\n    logger.finer('>>>> finer');\r\n    logger.finest('>>>> finest');\r\n\r\n    logger.log(Level.WARNING, '>>>> waring!!!!');\r\n\r\n    String name = 'wwb';\r\n    int age = 23;\r\n    logger.log(Level.INFO, '>>>> name: {0}, age: {1}', new Object[]{name, age});\r\n\r\n    //logger.log(Level.SEVERE, 'NPE: ', new NullPointerException());\r\n}\r\n```\r\n\r\n##### logger\u7684\u7ee7\u627f\u5173\u7cfb\r\n\r\n\u521b\u5efa`logger`\u65f6\uff0c\u82e5\u672a\u6307\u5b9a\u7236`logger`\uff0c\u5219\u9ed8\u8ba4\u7ee7\u627f`RootLogger`\u3002", "top": 0, "createdAt": 1730886638, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-11-06", "dateLabelColor": "#bc4c00"}, "P28": {"htmlDir": "docs/post/dijkstra.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "dijkstra", "postUrl": "post/dijkstra.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/28", "commentNum": 0, "wordCount": 6024, "description": "1. \u666e\u901adijkstra\r\n\r\n```java\r\nimport java.util.*;\r\n\r\npublic class Dijkstra {\r\n    static class Node implements Comparable<Node> {\r\n        int vertex;\r\n        int distance;\r\n\r\n        public Node(int vertex, int distance) {\r\n            this.vertex = vertex;\r\n            this.distance = distance;\r\n        }\r\n\r\n        @Override\r\n        public int compareTo(Node other) {\r\n            return Integer.compare(this.distance, other.distance);\r\n        }\r\n    }\r\n\r\n    public static int[] dijkstra(int[][] graph, int start) {\r\n        int n = graph.length;\r\n        int[] distances = new int[n];\r\n        boolean[] visited = new boolean[n];\r\n\r\n        // \u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\r\n        Arrays.fill(distances, Integer.MAX_VALUE);\r\n        distances[start] = 0;\r\n\r\n        // \u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\r\n        PriorityQueue<Node> pq = new PriorityQueue<>();\r\n        pq.offer(new Node(start, 0));\r\n\r\n        while (!pq.isEmpty()) {\r\n            Node current = pq.poll();\r\n            int u = current.vertex;\r\n\r\n            // \u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u8df3\u8fc7\r\n            if (visited[u]) continue;\r\n            visited[u] = true;\r\n\r\n            // \u66f4\u65b0\u76f8\u90bb\u8282\u70b9\u7684\u8ddd\u79bb\r\n            for (int v = 0; v < n; v++) {\r\n                if (graph[u][v] != 0) {  // \u5b58\u5728\u8fb9\r\n                    int newDist = distances[u] + graph[u][v];\r\n                    if (newDist < distances[v]) {\r\n                        distances[v] = newDist;\r\n                        pq.offer(new Node(v, distances[v]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return distances;\r\n    }\r\n\r\n    // \u6d4b\u8bd5\u4ee3\u7801\r\n    public static void main(String[] args) {\r\n        int[][] graph = {\r\n            {0, 4, 2, 0, 0},\r\n            {4, 0, 1, 5, 0},\r\n            {2, 1, 0, 8, 10},\r\n            {0, 5, 8, 0, 2},\r\n            {0, 0, 10, 2, 0}\r\n        };\r\n\r\n        int start = 0;  // \u8d77\u70b9\u4e3aA\uff080\u53f7\u9876\u70b9\uff09\r\n        int[] distances = dijkstra(graph, start);\r\n\r\n        // \u6253\u5370\u7ed3\u679c\r\n        System.out.println('\u4ece\u9876\u70b9 ' + start + ' \u5230\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff1a');\r\n        for (int i = 0; i < distances.length; i++) {\r\n            System.out.println('\u5230\u9876\u70b9 ' + i + ' \u7684\u8ddd\u79bb: ' + distances[i]);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2. \u5e26\u8def\u5f84\u8bb0\u5f55\u7684dijkstra\r\n\r\n```java\r\nimport java.util.*;\r\n\r\npublic class DijkstraWithPath {\r\n    static class Node implements Comparable<Node> {\r\n        int vertex;\r\n        int distance;\r\n\r\n        public Node(int vertex, int distance) {\r\n            this.vertex = vertex;\r\n            this.distance = distance;\r\n        }\r\n\r\n        @Override\r\n        public int compareTo(Node other) {\r\n            return Integer.compare(this.distance, other.distance);\r\n        }\r\n    }\r\n\r\n    static class Result {\r\n        int[] distances;\r\n        int[] previousVertices;\r\n\r\n        public Result(int[] distances, int[] previousVertices) {\r\n            this.distances = distances;\r\n            this.previousVertices = previousVertices;\r\n        }\r\n\r\n        // \u83b7\u53d6\u4ece\u8d77\u70b9\u5230\u76ee\u6807\u70b9\u7684\u8def\u5f84\r\n        public List<Integer> getPath(int target) {\r\n            List<Integer> path = new ArrayList<>();\r\n            int current = target;\r\n\r\n            // \u5982\u679c\u6ca1\u6709\u8def\u5f84\u5230\u8fbe\u76ee\u6807\u70b9\r\n            if (distances[target] == Integer.MAX_VALUE) {\r\n                return path;\r\n            }\r\n\r\n            while (current != -1) {\r\n                path.add(0, current);\r\n                current = previousVertices[current];\r\n            }\r\n\r\n            return path;\r\n        }\r\n    }\r\n\r\n    public static Result dijkstra(int[][] graph, int start) {\r\n        int n = graph.length;\r\n        int[] distances = new int[n];\r\n        int[] previousVertices = new int[n];\r\n        boolean[] visited = new boolean[n];\r\n\r\n        // \u521d\u59cb\u5316\r\n        Arrays.fill(distances, Integer.MAX_VALUE);\r\n        Arrays.fill(previousVertices, -1);\r\n        distances[start] = 0;\r\n\r\n        PriorityQueue<Node> pq = new PriorityQueue<>();\r\n        pq.offer(new Node(start, 0));\r\n\r\n        while (!pq.isEmpty()) {\r\n            Node current = pq.poll();\r\n            int u = current.vertex;\r\n\r\n            if (visited[u]) continue;\r\n            visited[u] = true;\r\n\r\n            for (int v = 0; v < n; v++) {\r\n                if (graph[u][v] != 0) {\r\n                    int newDist = distances[u] + graph[u][v];\r\n                    if (newDist < distances[v]) {\r\n                        distances[v] = newDist;\r\n                        previousVertices[v] = u;\r\n                        pq.offer(new Node(v, distances[v]));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Result(distances, previousVertices);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        // \u793a\u4f8b\u56fe\uff08\u90bb\u63a5\u77e9\u9635\u8868\u793a\uff09\r\n        int[][] graph = {\r\n            {0, 4, 2, 0, 0},\r\n            {4, 0, 1, 5, 0},\r\n            {2, 1, 0, 8, 10},\r\n            {0, 5, 8, 0, 2},\r\n            {0, 0, 10, 2, 0}\r\n        };\r\n\r\n        int start = 0;\r\n        Result result = dijkstra(graph, start);\r\n\r\n        // \u6253\u5370\u6240\u6709\u6700\u77ed\u8ddd\u79bb\r\n        System.out.println('\u4ece\u9876\u70b9 ' + start + ' \u5230\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff1a');\r\n        for (int i = 0; i < result.distances.length; i++) {\r\n            System.out.println('\u5230\u9876\u70b9 ' + i + ' \u7684\u8ddd\u79bb: ' + result.distances[i]);\r\n\r\n            // \u6253\u5370\u8def\u5f84\r\n            List<Integer> path = result.getPath(i);\r\n            System.out.println('\u8def\u5f84: ' + path);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. \u89e3\u91ca\r\n   1. Node\u7c7b\r\n      - \u5b9e\u73b0\u4e86Comparator\u63a5\u53e3\uff0c\u7528\u4e8e\u4f18\u5148\u961f\u5217\u7684\u6392\u5e8f\r\n      - \u5b58\u50a8\u9876\u70b9\u7f16\u53f7\u548c\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\r\n   2. \u6570\u636e\u7ed3\u6784\r\n      - `distances[]`\uff1a\u5b58\u50a8\u4ece\u8d77\u70b9\u5230\u5404\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\r\n      - `visited[]`\uff1a\u8bb0\u5f55\u9876\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\r\n      - `previousVertices[]`\uff1a\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u4e2d\u6bcf\u4e2a\u9876\u70b9\u7684\u524d\u9a71\u9876\u70b9\r\n      - `PriorityQueue`\uff1a\u4f18\u5148\u961f\u5217\uff0c\u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u6700\u77ed\u8ddd\u79bb\u7684\u9876\u70b9\r\n   3. \u6838\u5fc3\u6b65\u9aa4\r\n      - \u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\uff0c\u8d77\u70b9\u8ddd\u79bb\u4e3a0\uff0c\u5176\u4ed6\u4e3a\u65e0\u7a77\u5927\r\n      - \u4f7f\u7528\u4f18\u5148\u961f\u5217\u9009\u62e9\u5f53\u524d\u6700\u77ed\u8ddd\u79bb\u7684\u9876\u70b9\r\n      - \u66f4\u65b0\u9009\u4e2d\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u7684\u8ddd\u79bb\r\n      - \u8bb0\u5f55\u8def\u5f84\u4fe1\u606f\r\n4. \u6027\u80fd\u4f18\u5316\u5efa\u8bae\r\n   1. \u5bf9\u4e8e\u7a00\u758f\u56fe\uff0c\u4f7f\u7528\u90bb\u63a5\u8868\u4ee3\u66ff\u90bb\u63a5\u77e9\u9635\r\n   2. \u4f7f\u7528\u7d22\u5f15\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\r\n   3. \u5982\u679c\u53ea\u9700\u8981\u627e\u5230\u5230\u7279\u5b9a\u76ee\u6807\u7684\u6700\u77ed\u8def\u5f84\uff0c\u53ef\u4ee5\u5728\u627e\u5230\u540e\u63d0\u524d\u7ec8\u6b62\r\n5. \u4f7f\u7528\u793a\u4f8b\r\n\r\n```java\r\n// \u521b\u5efa\u56fe\uff08\u90bb\u63a5\u77e9\u9635\uff09\r\nint[][] graph = new int[5][5];\r\n// \u6dfb\u52a0\u8fb9\r\ngraph[0][1] = 4;  // A\u5230B\u7684\u8ddd\u79bb\u4e3a4\r\ngraph[1][0] = 4;  // B\u5230A\u7684\u8ddd\u79bb\u4e3a4\r\n// ... \u6dfb\u52a0\u5176\u4ed6\u8fb9\r\n\r\n// \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\r\nResult result = dijkstra(graph, 0);  // \u4ece\u9876\u70b90\u5f00\u59cb\r\n\r\n// \u83b7\u53d6\u5230\u67d0\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\r\nList<Integer> pathTo3 = result.getPath(3);\r\nSystem.out.println('\u5230\u9876\u70b93\u7684\u8def\u5f84: ' + pathTo3);\r\nSystem.out.println('\u8ddd\u79bb: ' + result.distances[3]);\r\n```\r\n\r\n\r\n\r\n\u3002", "top": 0, "createdAt": 1734130694, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-12-14", "dateLabelColor": "#bc4c00"}, "P29": {"htmlDir": "docs/post/Z-han-shu-\uff08-kuo-zhan-kmp\uff09.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "Z\u51fd\u6570\uff08\u6269\u5c55kmp\uff09", "postUrl": "post/Z-han-shu-%EF%BC%88-kuo-zhan-kmp%EF%BC%89.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/29", "commentNum": 0, "wordCount": 900, "description": "[\u539f\u7406](https://oi-wiki.org/string/z-func/#__tabbed_2_1)\r\n\r\n```java\r\npublic int[] zFunction(String s) {\r\n        int n = s.length();\r\n        char[] c = s.toCharArray();\r\n        int[] z = new int[n];\r\n        int l = 0;\r\n        int r = 0;\r\n        for(int i = 1;i < n;i++) {\r\n            if(i > r) {\r\n                // \u66b4\u529b\u5339\u914d\r\n                while(i + z[i] < n && c[i + z[i]] == c[z[i]]) z[i]++;\r\n            } else {\r\n                if(z[i - l] < r - i + 1) z[i] = z[i - l];\r\n                else {\r\n                    // \u8df3\u8fc7\u524dr - i + 1\u4e2a\u540e\u7ee7\u7eed\u5339\u914d\r\n                    while(r + z[i] + 1 < n && c[r + z[i] + 1] == c[r - i + 1 + z[i]]) z[i]++;\r\n                    z[i] += r - i + 1;\r\n                }\r\n            }\r\n            if(i + z[i] > r && z[i] != 0) {\r\n                // \u66f4\u65b0l\u3001r\r\n                l = i;\r\n                r = i + z[i] - 1;\r\n            }\r\n        }\r\n\r\n        return z;\r\n    }\r\n```\u3002", "top": 0, "createdAt": 1734431535, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-12-17", "dateLabelColor": "#bc4c00"}, "P30": {"htmlDir": "docs/post/qian-zhui-han-shu-\uff08kmp\uff09.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u524d\u7f00\u51fd\u6570\uff08kmp\uff09", "postUrl": "post/qian-zhui-han-shu-%EF%BC%88kmp%EF%BC%89.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/30", "commentNum": 0, "wordCount": 2421, "description": "#### \u524d\u7f00\u51fd\u6570\uff08kmp\uff09\r\n\r\n##### [\u539f\u7406](https://oi-wiki.org/string/kmp/#__tabbed_3_3)\r\n\r\n##### 1.\u6c42\u524d\u7f00\u51fd\u6570\uff0c\u666e\u901a\u5199\u6cd5\r\n   - \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^3)\r\n\r\n```java\r\n/**\r\n     *\r\n     * \u65f6\u95f4\u590d\u6742\u5ea6: O(n^3)\r\n     * @param s \u5b57\u7b26\u4e32\r\n     * @return  pai\r\n     */\r\npublic int[] pf(String s) {\r\n    char[] c = s.toCharArray();\r\n    int n = c.length;\r\n    int[] pi = new int[n];\r\n    for(int i = 1;i < n;i++) {\r\n        for(int j = 1;j <= i;j++) {\r\n            int l = 0;\r\n            int r = j;\r\n            while(r < n && c[l] == c[r]) {\r\n                l++;\r\n                r++;\r\n            }\r\n            if(r > i) {\r\n                pi[i] = i - j + 1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return pi;\r\n}\r\n```\r\n\r\n##### 2.\u6c42\u524d\u7f00\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u4f18\u5316\r\n\r\n   - \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\r\n   - \u539f\u7406\uff1a\r\n\r\n   > \u89c2\u5bdf\u76f8\u90bb\u7684`pai[i]`\u3001`pai[i + 1]`\uff0c\u53d1\u73b0`pai[i + 1] <= pai[i] + 1`\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a`pai[i]`\u90fd\u80fd\u8df3\u8fc7`i - pai[i + 1]`\u4e2a\u524d\u7f00\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\r\n\r\n```java\r\n/**\r\n     *\r\n     * \u65f6\u95f4\u590d\u6742\u5ea6: O(n^2)\r\n     * @param s \u5b57\u7b26\u4e32\r\n     * @return  pi\r\n     */\r\npublic int[] pf(String s) {\r\n    char[] c = s.toCharArray();\r\n    int n = c.length;\r\n    int[] pi = new int[n];\r\n    for(int i = 1;i < n;i++) {\r\n        if(c[i] == c[pi[i - 1]]) {\r\n            pi[i] = pi[i - 1] + 1;\r\n            continue;\r\n        }\r\n        for(int j = i - pi[i - 1] + 1;j <= i;j++) {\r\n            int l = 0;\r\n            int r = j;\r\n            while(r < n && c[l] == c[r]) {\r\n                l++;\r\n                r++;\r\n            }\r\n            if(r > i) {\r\n                pi[i] = i - j + 1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return pi;\r\n}\r\n```\r\n\r\n##### 3.\u6c42\u524d\u7f00\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u4f18\u5316\r\n\r\n- \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\r\n\r\n- \u539f\u7406\uff1a\r\n\r\n  > \u6c42`pi[i]`\uff0c`len = pi[i - 1]`\uff0c`len`\u4e3a`c[i - 1]`\u7684\u76f8\u7b49\u771f\u524d\u540e\u7f00\u957f\u5ea6\uff0c\u82e5`s[len] != s[i]`\uff0c\u5219\u51cf\u5c11\uff0c\u76f4\u5230`0`\u3002", "top": 0, "createdAt": 1734513712, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-12-18", "dateLabelColor": "#bc4c00"}, "P31": {"htmlDir": "docs/post/floyd.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "floyd", "postUrl": "post/floyd.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/31", "commentNum": 0, "wordCount": 2876, "description": "#### [\u539f\u7406](https://blog.csdn.net/qq_35644234/article/details/60875818)\r\n\r\n#### \u5b9e\u73b0\r\n\r\n- \u6570\u636e\r\n\r\n  ```text\r\n  12\r\n  1 2 12\r\n  1 6 16\r\n  1 7 14\r\n  2 3 10\r\n  2 6 7\r\n  3 4 3\r\n  3 5 5\r\n  3 6 6\r\n  4 5 4\r\n  5 6 2\r\n  5 7 8\r\n  6 7 9\r\n  ```\r\n\r\n```java\r\npublic static void floyd() {\r\n    Scanner sc = new Scanner(System.in);\r\n    System.out.print('\u8bf7\u8f93\u5165\u56fe\u7684\u8fb9\u6570\u91cf: ');\r\n    int edgesAmount = sc.nextInt();\r\n    List<int[]> edges = new ArrayList<>();\r\n    sc.nextLine();\r\n\r\n    System.out.println('\u8bf7\u8f93\u5165\u6240\u6709\u8fb9\uff08\u683c\u5f0f\u4e3a: \u70b9x \u70b9y \u6743\u91cd\uff09: ');\r\n    Set<Integer> points = new HashSet<>();\r\n    for(int i = 0;i < edgesAmount;i++) {\r\n        String line = sc.nextLine();\r\n        String[] edge = line.split(' ');\r\n        edges.add(new int[]{Integer.parseInt(edge[0]), Integer.parseInt(edge[1]), Integer.parseInt(edge[2])});\r\n\r\n        points.add(Integer.parseInt(edge[0]));\r\n        points.add(Integer.parseInt(edge[1]));\r\n    }\r\n    int pointSize = points.size() + 1;\r\n    int[][] d = new int[pointSize][pointSize];\r\n    int[][] p = new int[pointSize][pointSize];\r\n    // \u521d\u59cb\u5316d\u6570\u7ec4\r\n    for(int i = 0;i < pointSize;i++) {\r\n        Arrays.fill(d[i], Integer.MAX_VALUE);\r\n    }\r\n    for(int[] e : edges) {\r\n        d[e[0]][e[1]] = e[2];\r\n        d[e[1]][e[0]] = e[2];\r\n    }\r\n\r\n    // \u521d\u59cb\u5316path\u6570\u7ec4\uff0c\u5047\u8bbe\u5168\u90fd\u53ef\u8fbe\r\n    for(int i = 0;i < pointSize;i++) {\r\n        for(int j = 0;j < pointSize;j++) {\r\n            p[i][j] = j;\r\n        }\r\n    }\r\n\r\n    // O(n^3)\r\n    for(int k = 0;k < pointSize;k++) {\r\n        for(int i = 0;i < pointSize;i++) {\r\n            for(int j = 0;j < pointSize;j++) {\r\n                if(d[i][k] == Integer.MAX_VALUE || d[k][j] == Integer.MAX_VALUE) continue;\r\n                int dis = d[i][k] + d[k][j];\r\n                if(dis < d[i][j]) {\r\n                    d[i][j] = dis;\r\n                    p[i][j] = k;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // \u8f93\u51fa\r\n    for(int i = 0;i < pointSize;i++) {\r\n        for(int j = 0;j < pointSize;j++) {\r\n            if(i == j || d[i][j] == Integer.MAX_VALUE) continue;\r\n            System.out.println(i + '->' + j + '\u7684\u6700\u77ed\u8def\u5f84\u503c: ' + d[i][j]);\r\n            List<Integer> paths = new ArrayList<>();\r\n            path(p, i, j, -1, paths);\r\n            System.out.println('\u8def\u5f84\u4e3a: ' + buildPath(paths));\r\n        }\r\n    }\r\n}\r\n\r\nprivate static void path(int[][] p, int s, int t, int lr, List<Integer> paths) {\r\n    int m = p[s][t];\r\n\r\n    if(lr != 1) paths.add(s);\r\n    // \u5904\u7406\u5de6\u8fb9\r\n    if(!(m == s || m == t)) path(p, s, m, 1, paths);\r\n    // \u4e2d\u70b9\r\n    if(!(m == s || m == t)) paths.add(m);\r\n    // \u5904\u7406\u53f3\u8fb9\r\n    if(!(m == s || m == t)) path(p, m, t, 1, paths);\r\n    if(lr != 1) paths.add(t);\r\n}\r\n\r\nprivate static String buildPath(List<Integer> paths) {\r\n    StringBuilder sb = new StringBuilder();\r\n    for(int i = 0;i < paths.size();i++) {\r\n        sb.append(paths.get(i));\r\n        if(i != paths.size() - 1) sb.append('->');\r\n    }\r\n\r\n    return sb.toString();\r\n}\r\n```\r\n\r\n\u3002", "top": 0, "createdAt": 1735511457, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2024-12-30", "dateLabelColor": "#bc4c00"}, "P32": {"htmlDir": "docs/post/er-jin-zhi-mei-ju.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u4e8c\u8fdb\u5236\u679a\u4e3e", "postUrl": "post/er-jin-zhi-mei-ju.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/32", "commentNum": 0, "wordCount": 1110, "description": "#### \u4e8c\u8fdb\u5236\u679a\u4e3e\r\n\r\n##### 1.\u679a\u4e3e\u6240\u6709\u96c6\u5408\r\n\r\n> \u5047\u8bbe\u6709\u4e09\u4e2a\u5143\u7d20\u7684\u96c6\u5408z\uff1a{0, 1, 2}\uff0c\u90a3\u4e48\u6bcf\u79cd\u5143\u7d20\u53ef\u4ee5\u9009\u6216\u8005\u4e0d\u9009\uff0c\u53ea\u6709\u4e09\u4e2a\u5143\u7d20\uff0c\u6709`2^3`\u4e2a\u5b50\u96c6\r\n>\r\n> {0\uff0c1\uff0c10\uff0c11\uff0c100\uff0c101\uff0c110\uff0c111}\uff0c\u521a\u597d\u5c0f\u4e8e`1 << |z|`\u7684\u6570\u6709`2^3`\u4e2a\uff0c\u4ece\u5c0f\u5f00\u59cb\u679a\u4e3e\uff0c\u7136\u540e\u53d6\u4e8c\u8fdb\u5236\u4f4d\u5373\u53ef\u8868\u793a\u67d0\u4e2a\u5143\u7d20\u7684\u72b6\u6001\r\n\r\n```java\r\nfor(int i = 0;i < (1 << n);i++) {\r\n    // \u679a\u4e3e\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5373\u80fd\u5f97\u5230\u67d0\u4e2a\u5143\u7d20\u7684\u53d6\u820d\u72b6\u6001\r\n}\r\n```\r\n\r\n\r\n\r\n##### 2.\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u67d0\u4e2a\u96c6\u5408s\u7684\u975e\u7a7a\u5b50\u96c6\r\n\r\n> \u5047\u8bbe\u5bf9\u4e8e\u96c6\u5408`10101`\uff0c\u82e5\u60f3\u8981\u679a\u4e3e\u5168\u90e8\u975e\u7a7a\u96c6\u5408\uff0c\u66b4\u529b\u505a\u6cd5\u662f\uff1a\u4e0d\u65ad\u51cf1\uff0c\u5f97\u5230\u7684\u6240\u6709\u5b50\u96c6\u4e2d\u5305\u542b\u4e86`s`\u7684\u5b50\u96c6\uff0c\u5176\u4e2d\u4f1a\u6709\u96c6\u5408\u4e0d\u662fs\u7684\u5b50\u96c6\r\n>\r\n> \u90a3\u4e48\uff0c\u5982\u4f55\u8df3\u8fc7\u8fd9\u4e9b\u975es\u7684\u5b50\u96c6\u7684\u96c6\u5408\u3002", "top": 0, "createdAt": 1735674112, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-01-01", "dateLabelColor": "#0969da"}, "P33": {"htmlDir": "docs/post/bing-cha-ji.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u5e76\u67e5\u96c6", "postUrl": "post/bing-cha-ji.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/33", "commentNum": 0, "wordCount": 2325, "description": "#### \u901a\u7528\u7248\r\n```java\r\nclass UnionFind {\r\n    int[] s;\r\n\r\n    public UnionFind(int size) {\r\n        s = new int[size];\r\n        for (int i = 0; i < size; i++) {\r\n            s[i] = i;\r\n        }\r\n    }\r\n\r\n    public int find(int x) {\r\n        int r = s[x];\r\n        if (r != x) {\r\n            r = find(s[x]);\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    public void union(int i, int j) {\r\n        int iBoss = find(i);\r\n        int jBoss = find(j);\r\n\r\n        if (iBoss != jBoss) {\r\n            if(iBoss < jBoss) {\r\n                s[jBoss] = iBoss;\r\n            } else {\r\n                s[iBoss] = jBoss;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### hash\u8868\u7248\uff08\u6ca1\u6709\u521d\u59cb\u5316\u8282\u70b9(i -> i)\uff0c\u9700\u8981\u5728\u5916\u90e8\u4e3b\u52a8\u521d\u59cb\u5316\uff09\r\n```java\r\nclass UnionFind {\r\n    Map<Integer, Integer> map = new HashMap<>();\r\n\r\n    public UnionFind() {}\r\n\r\n    public int find(int x) {\r\n        int r = map.get(x);\r\n        if(map.get(x) != x) {\r\n            r = find(r);\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    public void union(int i, int j) {\r\n        int iBoss = find(i);\r\n        int jBoss = find(j);\r\n\r\n        if (iBoss != jBoss) {\r\n            if (iBoss < jBoss) {\r\n                map.put(jBoss, iBoss);\r\n            } else {\r\n                map.put(iBoss, jBoss);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### \u5b8c\u5168\u7248\r\n- \u6709path compressed\r\n- \u6709 union by rank\r\n```java\r\nclass DisjointSet {\r\n    int[] s;\r\n    int[] rank;\r\n\r\n    public DisjointSet(int size) {\r\n        s = new int[size];\r\n        rank = new int[size];\r\n        for (int i = 0; i < size; i++) {\r\n            s[i] = i;\r\n        }\r\n    }\r\n\r\n    public int find(int x) {\r\n        // path compression\r\n        if (s[x] != x) {\r\n            s[x] = find(s[x]);\r\n        }\r\n\r\n        return s[x];\r\n    }\r\n\r\n    public void union(int i, int j) {\r\n        int iBoss = find(i);\r\n        int jBoss = find(j);\r\n\r\n        if (iBoss != jBoss) {\r\n            // union by rank\r\n            if (rank[iBoss] < rank[jBoss]) {\r\n                s[iBoss] = jBoss;\r\n            } else if (rank[iBoss] > rank[jBoss]) {\r\n                s[jBoss] = iBoss;\r\n            } else {\r\n                s[iBoss] = jBoss;\r\n                rank[jBoss]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return 'DisjointSet{' +\r\n            's=' + Arrays.toString(s) +\r\n            '}';\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1735698074, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-01-01", "dateLabelColor": "#0969da"}, "P34": {"htmlDir": "docs/post/tarjan-suan-fa.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "tarjan\u7b97\u6cd5", "postUrl": "post/tarjan-suan-fa.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/34", "commentNum": 0, "wordCount": 2990, "description": "#### tarjan\u7b97\u6cd5\r\n\r\n[tarjan\u5b66\u4e60](https://oi-wiki.org/graph/scc/)\r\n\r\n> Robert E. Tarjan\uff08\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\uff09 \u53d1\u660e\u4e86\u5f88\u591a\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u6709\uff1a\r\n>\r\n> > \u5df2\u5b66\u4e60\uff1a\u2713\r\n> >\r\n> > \u672a\u5b66\u4e60\uff1a\u00d7\r\n>\r\n> - \u5e76\u67e5\u96c6\uff08\u2713\uff09\r\n> - Splay\uff08\u00d7\uff09\r\n> - Toptree\uff08\u00d7\uff09\r\n> - Tarjan\uff08dfs\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u3001dfs\u6c42\u5272\u70b9\u3001dfs\u6c42\u5272\u8fb9\uff09(\u2713)\r\n\r\n##### 1.\u5728\u6709\u5411\u56fe\u4e2d\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\r\n\r\n**\u5f3a\u8fde\u901a\u5206\u91cf\uff08Strongly Connected Components\uff09**\uff1a\u6781\u5927\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\r\n\r\ntarjan\u7b97\u6cd5\u57fa\u4e8edfs\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0cm\u6bcf\u6b21\u628a\u5c1a\u672a\u5904\u7406\u7684\u8282\u70b9\u52a0\u5165\u6808\u4e2d\r\n\r\n\u5e76\u4e14\uff0c\u6bcf\u4e2a\u8282\u70b9\u8fd8\u7ef4\u62a4\u4e86\u4ee5\u4e0b\u4e24\u4e2a\u53d8\u91cf\uff1a\r\n\r\n- dfn\uff1adfs\u65f6\u904d\u5386\u8282\u70b9\u7684\u6b21\u5e8f\r\n- low(low link value)\uff1a\u5b50\u6811\u4e2d\u80fd\u591f\u56de\u6eaf\u5230\u7684\u6700\u65e9\u7684\u5728stack\u4e2d\u7684dfn\r\n\r\n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u7b2c\u4e00\u4e2adfs\u5230\u7684\u8282\u70b9\u7684dfn = low\uff0c\u8fd9\u65f6\u5c06stack\u91cc >= dfn\u7684\u8282\u70b9pop\r\n\r\n##### 2.\u5728\u65e0\u76f8\u56fe\u4e2d\u6c42\u5272\u70b9\r\n\r\n\u57fa\u4e8e1\u8fdb\u884c\u53d8\u5f62\r\n\r\n- \u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u82e5\u5b50\u6811\u5927\u4e8e\u7b49\u4e8e2\uff0c\u5219\u4e3a\u5272\u70b9\r\n\r\n- \u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9u\u7684\u5b50\u8282\u70b9\uff0c\u82e5\u5b58\u5728\u4e00\u4e2a\u8282\u70b9v\u7684low\u503c\u5927\u4e8e\u7b49\u4e8edfn(u)\uff0c\u5219u\u4e3a\u5272\u70b9\r\n\r\n  > why\uff1f\uff1a\u56e0\u4e3a\u82e5\u53bb\u6389\u70b9u\uff0c\u5219\u70b9v\u65e0\u6cd5\u56de\u5230\u7956\u5148\u8282\u70b9\uff08\u56e0\u4e3a\u70b9v\u80fd\u591f\u56de\u5230\u7956\u5148\u8282\u70b9\u662f\u4f9d\u8d56\u70b9u\uff09\uff0c\u5f62\u6210\u65b0\u7684\u8fde\u901a\u5206\u91cf\r\n\r\n##### 3.\u5728\u65e0\u5411\u56fe\u4e2d\u6c42\u5272\u8fb9\r\n\r\n\u57fa\u4e8e1\u8fdb\u884c\u53d8\u5f62\r\n\r\n- \u82e5\u67d0\u4e2a\u8282\u70b9v\u7684dfn == low(v) \uff0c\u5219\u4ee3\u8868\u5176\u65e0\u6cd5\u56de\u5230\u7956\u5148\u8282\u70b9\uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u53e6\u4e00\u6761\u8fb9\u56de\u5230\u7236\u4eb2\u8282\u70b9\uff0c\u5219\u5176\u7236\u8282\u70b9u\u5230v\u7684\u8fd9\u6761\u8fb9\u5373\u4e3a\u5272\u8fb9\r\n\r\n\u5272\u8fb9\u4f8b\u9898\uff1a[1192.\u67e5\u627e\u96c6\u7fa4\u5185\u7684\u5173\u952e\u8fde\u63a5](https://leetcode.cn/problems/critical-connections-in-a-network/description/?envType=study-plan-v2&envId=graph-theory)\r\n\r\n\u5b9e\u73b0\uff1a\r\n\r\n```java\r\nclass Solution {\r\n    // tarjan \u5272\u8fb9\r\n    int p = 0;\r\n    List<List<Integer>> ans;\r\n    public List<List<Integer>> criticalConnections(int n, List<List<Integer>> connections) {\r\n        Map<Integer, List<Integer>> map = new HashMap<>();\r\n        for(List<Integer> e : connections) {\r\n            map.computeIfAbsent(e.get(0), k -> new ArrayList<>()).add(e.get(1));\r\n            map.computeIfAbsent(e.get(1), k -> new ArrayList<>()).add(e.get(0));\r\n        }\r\n\r\n        int[] dfn = new int[n];\r\n        int[] low = new int[n];\r\n        boolean[] v = new boolean[n];\r\n        Set<Integer> set = new HashSet<>();\r\n        ArrayDeque<Integer> stack = new ArrayDeque<>();\r\n        ans = new ArrayList<>();\r\n        dfs(map, stack, set, v, dfn, low, 0, -1);\r\n\r\n        return ans;\r\n    }\r\n\r\n    private void dfs(Map<Integer, List<Integer>> map, ArrayDeque<Integer> stack, Set<Integer> set, boolean[] v, int[] dfn, int[] low, int cur, int pare) {\r\n        dfn[cur] = p;\r\n        low[cur] = dfn[cur];\r\n        set.add(cur);\r\n        stack.push(cur);\r\n        v[cur] = true;\r\n        List<Integer> ns = map.get(cur);\r\n        if(ns != null) {\r\n            for(int next : ns) {\r\n                if(!v[next]) {\r\n                    ++p;\r\n                    dfs(map, stack, set, v, dfn, low, next, cur);\r\n                    low[cur] = Math.min(low[cur], low[next]);\r\n                    if(low[next] > dfn[cur]) {\r\n                        // \u5272\u8fb9\r\n                        ans.add(List.of(cur, next));\r\n                    }\r\n                } else {\r\n                    if(set.contains(next) && next != pare) {\r\n                        low[cur] = Math.min(low[cur], low[next]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(dfn[cur] == low[cur]) {\r\n            while(!stack.isEmpty() && stack.peek() != cur) {\r\n                int pop = stack.pop();\r\n                set.remove(pop);\r\n            }\r\n            if(!stack.isEmpty()) {\r\n                int pop = stack.pop();\r\n                set.remove(pop);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\u3002", "top": 0, "createdAt": 1735836865, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-01-03", "dateLabelColor": "#0969da"}, "P35": {"htmlDir": "docs/post/rabbitmq_java.html", "labels": ["\u5b66\u4e60"], "postTitle": "rabbitmq_java", "postUrl": "post/rabbitmq_java.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/35", "commentNum": 0, "wordCount": 12612, "description": "##### rabbitmq\u5b89\u88c5\u6559\u7a0b\n\n**\u73af\u5883\uff1aubuntu**\n\n1. \u76f4\u63a5\u4f7f\u7528[\u5b98\u7f51](https://www.rabbitmq.com/docs/install-debian#apt-quick-start-cloudsmith)\u63d0\u4f9b\u7684\u4e00\u952e\u811a\u672c\uff0c\u4f1a\u5b89\u88c5\u8f83\u65b0\u7684erlang\u4ee5\u53carabbit-server\n\n2. \u542f\u7528\u63d2\u4ef6\u7ba1\u7406\uff0c\u5f00\u542fweb\u7aef\n\n   ```shell\n   rabbitmq-plugins enable rabbitmq_management\n   ```\n\n3. \u9ed8\u8ba4web\u7aef\u53ea\u652f\u6301localhost\u8bbf\u95ee\uff0c\u989d\u5916\u914d\u7f6e\uff1a\n\n   ```shell\n   # \u6dfb\u52a0\u7528\u6237\n   rabbitmqctl add_user jasper pubgM666\n   # \u8bbe\u7f6e\u4e3a\u7ba1\u7406\u5458\n   rabbitmqctl set_user_tags jasper administrator\n   # \u6388\u4e88\u6743\u9650\n   rabbitmqctl set_permissions -p / jasper '.*' '.*' '.*'\n   # restart\n   systemctl restart rabbitmq-server\n   ```\n\n\n\n##### tabbitmq\u7b80\u5355\u4f7f\u7528\n\n###### \u4f9d\u8d56\n\n```xml\n<dependency>\n    <groupId>com.rabbitmq</groupId>\n    <artifactId>amqp-client</artifactId>\n    <version>5.19.0</version>\n</dependency>\n\n<!-- slf4j\u65e5\u5fd7\u95e8\u9762 -->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-api</artifactId>\n    <version>2.0.11</version>\n</dependency>\n\n<!-- slf4j\u5185\u90e8\u5b9e\u73b0 -->\n<dependency>\n    <groupId>org.slf4j</groupId>\n    <artifactId>slf4j-simple</artifactId>\n    <version>2.0.11</version>\n</dependency>\n```\n\n\n\n###### hello world\n\n1. producer\n\n   ```java\n   package wwb.rabbitmq.producer;\n   \n   import com.rabbitmq.client.Channel;\n   import com.rabbitmq.client.Connection;\n   import com.rabbitmq.client.ConnectionFactory;\n   \n   import java.nio.charset.StandardCharsets;\n   \n   public class HelloProducer {\n       public static void main(String[] args) {\n           ConnectionFactory factory = new ConnectionFactory();\n           factory.setHost('172.24.192.134');\n           factory.setPort(5672);\n           factory.setUsername('jasper');\n           factory.setPassword('pubgM666');\n           factory.setVirtualHost('/');\n   \n           try (Connection connection = factory.newConnection();\n                Channel channel = connection.createChannel()) {\n               channel.queueDeclare('hello', false, false, false, null);\n               channel.basicPublish('', 'hello', null, '\u4f60\u597d'.getBytes(StandardCharsets.UTF_8));\n           } catch (Exception e) {\n   \n           }\n       }\n   }\n   ```\n\n   \n\n2. consumer\n\n   ```java\n   package wwb.rabbitmq.consumer;\n   \n   import com.rabbitmq.client.Channel;\n   import com.rabbitmq.client.Connection;\n   import com.rabbitmq.client.ConnectionFactory;\n   import com.rabbitmq.client.DeliverCallback;\n   \n   public class HelloConsumer {\n       public static void main(String[] args) throws Exception{\n           ConnectionFactory factory = new ConnectionFactory();\n           factory.setHost('172.24.192.134');\n           factory.setPort(5672);\n           factory.setUsername('jasper');\n           factory.setPassword('pubgM666');\n           factory.setVirtualHost('/');\n   \n           Connection connection = factory.newConnection();\n           Channel channel = connection.createChannel();\n   \n           channel.queueDeclare('hello', false, false, false, null);\n           DeliverCallback deliverCallback = (consumerTag, mess) -> {\n               String message = new String(mess.getBody(), 'UTF-8');\n               System.out.println(message);\n           };\n           channel.basicConsume('hello', true, deliverCallback, tag -> {});\n       }\n   }\n   ```\n\n###### acknowlegement\n\n```java\npublic static void main(String[] args) throws Exception{\n    ConnectionFactory factory = new ConnectionFactory();\n    factory.setHost('172.24.192.134');\n    factory.setPort(5672);\n    factory.setUsername('jasper');\n    factory.setPassword('pubgM666');\n\n    Connection connection = factory.newConnection();\n    Channel channel = connection.createChannel();\n\n    channel.queueDeclare('workqueues', false, false, false, null);\n    // \u8bbe\u7f6e\u4e00\u6b21\u53ea\u63a5\u53d7\u4e00\u4e2a\u672a\u6d88\u8d39\u6d88\u606f\n    channel.basicQos(1); \n\n    Random random = new Random();\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0;i < 4;i++) {\n        sb.append((char) (random.nextInt(26) + 97));\n    }\n    String workerName = sb.toString();\n\n    DeliverCallback callback = (tag, entity) -> {\n        String body = new String(entity.getBody(), StandardCharsets.UTF_8);\n        for(int i = 0;i < body.length();++i) {\n            if(body.charAt(i) == '.') {\n                try {\n                    TimeUnit.MILLISECONDS.sleep(300);\n                } catch (InterruptedException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n        // \u624b\u52a8\u8fd4\u56deack\n        channel.basicAck(entity.getEnvelope().getDeliveryTag(), false);\n        System.out.println(workerName + '\u6d88\u8d39\u4e86\uff1a' + body);\n    };\n\n    channel.basicConsume('workqueues', false, callback, tag -> {});\n}\n```\n\n###### message durability\n\n\u5982\u4f55\u786e\u4fdd\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\uff1a\n\n1. \u961f\u5217\u6301\u4e45\u5316\uff0c\u58f0\u660e\u961f\u5217\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\n\n   ```java\n   channel.queueDeclare('workqueues', true, false, false, null);\n   ```\n\n2. \u6d88\u606f\u6301\u4e45\u5316\uff0c\u53d1\u9001\u6d88\u606f\u65f6\u58f0\u660e\n\n   ```java\n   channel.basicPublish('', 'workqueues', MessageProperties.PERSISTENT_TEXT_PLAIN, body.getBytes(StandardCharsets.UTF_8));\n   ```\n\n\u5982\u6b64\u8fc7\u540e\u6d88\u606f\u53ef\u9760\u6027\u5927\u5e45\u63d0\u5347\uff0c\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u60c5\u51b5\uff0c\u4f46\u662f\u8fd8\u662f\u5b58\u5728\u4e00\u4e2a\u5c0f\u7684\u7a97\u53e3\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\uff0c\u56e0\u4e3arabbitmq\u6536\u5230\u6d88\u606f\u65f6\uff0c\u5e76\u4e0d\u4f1a\u4fdd\u8bc1\u5c06\u6bcf\u6761\u6d88\u606f\u90fd\u5237\u76d8\uff0c\u800c\u662f\u5b58\u5728\u7f13\u51b2\u533a\u3002", "top": 0, "createdAt": 1741126207, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-03-05", "dateLabelColor": "#0969da"}, "P36": {"htmlDir": "docs/post/rabbitmq_spring_amqp.html", "labels": ["\u5b66\u4e60"], "postTitle": "rabbitmq_spring_amqp", "postUrl": "post/rabbitmq_spring_amqp.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/36", "commentNum": 0, "wordCount": 8108, "description": "##### \u4f9d\u8d56\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-amqp</artifactId>\n    <version>3.2.10</version>\n    <exclusions>\n        <exclusion>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-logging</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n```\n\n##### \u5982\u4f55\u58f0\u660e\u961f\u5217\u3001\u5982\u4f55\u521b\u5efa\u6d88\u8d39\u8005\uff1f\n\n**\u7531\u914d\u7f6e\u7c7b\u5b8c\u6210\uff1a**\n\n- \u58f0\u660e\u961f\u5217\uff0c\uff0c\u6ce8\u5165\u5bb9\u5668\n- \u521b\u5efaconsumer\u7c7b\uff0c@Bean\u6ce8\u5165\u5bb9\u5668\n\n\u5bf9\u4e8econsumer\uff0c\u4e5f\u53ef\u76f4\u63a5@component\u6ce8\u5165\u5bb9\u5668\n\n**consumer\u6d89\u53ca\u6ce8\u89e3\uff1a**\n\n- @RabbitListener\n- @RabbitHandler\n\n```java\n@Configuration\n@Profile({'tut2', 'work-queues'})\npublic class Tut2Config {\n    @Bean\n    public Queue queue() {\n        return new Queue('hello_a');\n    }\n\n    @Profile({'receiver'})\n    private static class ReceiverConfig {\n        @Bean\n        public Tut2Receiver receiver1() {\n            return new Tut2Receiver(1);\n        }\n\n        @Bean\n        public Tut2Receiver receiver2() {\n            return new Tut2Receiver(2);\n        }\n    }\n\n    @Profile({'sender'})\n    @Bean\n    public Tut2Sender sender() {\n        return new Tut2Sender();\n    }\n}\n```\n\n##### \u5982\u4f55\u53d1\u9001\u6d88\u606f\uff1f\n\n- RabbitTemplate\u5bf9\u5e95\u5c42\u4ee3\u7801\u505a\u4e86\u5c01\u88c5\uff0c\u53ef\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528\n\n- \u5bf9RabbiTemplate\u518d\u505a\u4e00\u5c42\u5c01\u88c5\n\n##### fanout\u4f7f\u7528\u793a\u4f8b\n\n- \u914d\u7f6e\u7c7b\n\n  ```java\n  @Configuration\n  @Profile({'tut3', 'publish-subscribe'})\n  public class Tut3Config {\n      @Bean\n      public FanoutExchange fanoutExchange() {\n          return new FanoutExchange('tut.fanout');\n      }\n  \n      @Profile({'receiver'})\n      private static class Receiver {\n          @Bean\n          public Queue autoDeleteQueue1() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Queue autoDeleteQueue2() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Binding binding1(@Autowired @Qualifier('autoDeleteQueue1') Queue autoDeleteQueue1, FanoutExchange fanoutExchange) {\n              return BindingBuilder.bind(autoDeleteQueue1).to(fanoutExchange);\n          }\n  \n          @Bean\n          public Binding binding2(@Autowired @Qualifier('autoDeleteQueue2') Queue autoDeleteQueue2, FanoutExchange fanoutExchange) {\n              return BindingBuilder.bind(autoDeleteQueue2).to(fanoutExchange);\n          }\n  \n          @Bean\n          public Tut3Receiver tut3Receiver() {\n              return new Tut3Receiver();\n          }\n      }\n  \n      @Profile({'sender'})\n      @Bean\n      public Tut3Sender tut3Sender() {\n          return new Tut3Sender();\n      }\n  }\n  ```\n\n- producer\n\n  ```java\n  public class Tut3Sender {\n      @Autowired\n      private RabbitTemplate rabbit;\n  \n      @Autowired\n      private FanoutExchange fanoutExchange;\n  \n      @Scheduled(fixedDelay = 1000, initialDelay = 500)\n      public void send() {\n          Random random = new Random();\n          String message = '\u5e7f\u64ad\u6d88\u606f' + random.nextInt(Integer.MAX_VALUE);\n          rabbit.convertAndSend(fanoutExchange.getName(), '', message);\n      }\n  }\n  ```\n\n- consumer\n\n  ```java\n  public class Tut3Receiver {\n      @RabbitListener(queues = {'#{autoDeleteQueue1.name}'})\n      public void receive1(String body) {\n          System.out.println('worker-1\u6d88\u8d39\u6d88\u606f\uff1a' + body);\n      }\n  \n      @RabbitListener(queues = {'#{autoDeleteQueue2.name}'})\n      public void receive2(String body) {\n          System.out.println('worker-2\u6d88\u8d39\u6d88\u606f\uff1a' + body);\n      }\n  }\n  ```\n\n##### direct\u4f7f\u7528\u793a\u4f8b\n\n- \u914d\u7f6e\u7c7b\n\n  ```java\n  @Configuration\n  @Profile({'tut4'})\n  public class Tut4Config {\n      @Bean\n      public DirectExchange directExchange() {\n          return new DirectExchange('tut.direct');\n      }\n  \n      @Profile({'receiver'})\n      private static class Receiver {\n          @Bean\n          public Queue q1() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Queue q2() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Binding b1(@Autowired @Qualifier('q1') AnonymousQueue q1, DirectExchange exchange) {\n              return BindingBuilder.bind(q1).to(exchange).with('1');\n          }\n  \n          @Bean\n          public Binding b2(@Autowired @Qualifier('q1')AnonymousQueue q1, DirectExchange exchange) {\n              return BindingBuilder.bind(q1).to(exchange).with('2');\n          }\n  \n          @Bean\n          public Binding b3(@Autowired @Qualifier('q2')AnonymousQueue q2, DirectExchange exchange) {\n              return BindingBuilder.bind(q2).to(exchange).with('3');\n          }\n  \n          @Bean\n          public Binding b4(@Autowired @Qualifier('q2')AnonymousQueue q2, DirectExchange exchange) {\n              return BindingBuilder.bind(q2).to(exchange).with('4');\n          }\n  \n          @Bean\n          public Tut4Receiver receiver() {\n              return new Tut4Receiver();\n          }\n      }\n  \n      @Profile({'sender'})\n      @Bean\n      public Tut4Sender sender() {\n          return new Tut4Sender();\n      }\n  }\n  ```\n\n- producer\n\n  ```java\n  public class Tut4Sender {\n      @Autowired\n      private RabbitTemplate rabbit;\n  \n      @Autowired\n      private DirectExchange exchange;\n  \n      @Scheduled(fixedDelay = 1000, initialDelay = 500)\n      public void send() {\n          Random random = new Random();\n          int v = random.nextInt(5);\n          rabbit.convertAndSend(exchange.getName(),\n                                String.valueOf(v),\n                                v);\n      }\n  }\n  ```\n\n- consumer\n\n  ```java\n  public class Tut4Receiver {\n      @RabbitListener(queues = {'#{q1.name}'})\n      public void receive1(String body) {\n          System.out.println('1-\u6d88\u8d39\u4e86\u6d88\u606f\uff1a' + body);\n      }\n  \n      @RabbitListener(queues = {'#{q2.name}'})\n      public void receive2(String body) {\n          System.out.println('2-\u6d88\u8d39\u4e86\u6d88\u606f\uff1a' + body);\n      }\n  }\n  ```\n\n##### topic\u4f7f\u7528\u793a\u4f8b\n\n- \u914d\u7f6e\u7c7b\n\n  ```java\n  @Configuration\n  @Profile({'tut5'})\n  public class Tut5Config {\n      @Bean\n      public TopicExchange topicExchange() {\n          return new TopicExchange('tut.topic_exchange');\n      }\n  \n      @Profile({'receiver'})\n      private static class Receiver {\n          @Bean\n          public Queue q1() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Queue q2() {\n              return new AnonymousQueue();\n          }\n  \n          @Bean\n          public Binding b1(@Autowired @Qualifier('q1') Queue q1, TopicExchange exchange) {\n              return BindingBuilder.bind(q1).to(exchange).with('*.orange.*');\n          }\n  \n          @Bean\n          public Binding b2(@Autowired @Qualifier('q2') Queue q2, TopicExchange exchange) {\n              return BindingBuilder.bind(q2).to(exchange).with('*.*.rabbit');\n          }\n  \n          @Bean\n          public Binding b3(@Autowired @Qualifier('q2') Queue q2, TopicExchange exchange) {\n              return BindingBuilder.bind(q2).to(exchange).with('lazy.#');\n          }\n  \n          @Bean\n          public Tut5Receiver receiver() {\n              return  new Tut5Receiver();\n          }\n      }\n  \n      @Profile({'sender'})\n      @Bean\n      public Tut5Sender sender() {\n          return new Tut5Sender();\n      }\n  }\n  ```\n\n- producer\n\n  ```java\n  public class Tut5Sender {\n      @Autowired\n      private RabbitTemplate rabbit;\n  \n      @Autowired\n      private TopicExchange exchange;\n  \n      private final String[] routingKeys = {'quick.orange.rabbit', 'lazy.orange.elephant', 'quick.orange.fox',\n              'lazy.brown.fox', 'lazy.pink.rabbit', 'quick.brown.fox'};\n  \n      @Scheduled(fixedDelay = 2000, initialDelay = 500)\n      public void send() {\n          Random random = new Random();\n          String routingKey = routingKeys[random.nextInt(routingKeys.length)];\n          rabbit.convertAndSend(exchange.getName(), routingKey, routingKey);\n      }\n  }\n  ```\n\n- consumer\n\n  ```java\n  public class Tut5Receiver {\n      @RabbitListener(queues = {'#{q1.name}'})\n      public void receive1(String body)  {\n          System.out.println('*.orange.* \u6d88\u8d39\u6d88\u606f\uff1a' + body);\n      }\n  \n      @RabbitListener(queues = {'#{q2.name}'})\n      public void receive2(String body)  {\n          System.out.println('*.*.rabbit | lazy.# \u6d88\u8d39\u6d88\u606f\uff1a' + body);\n      }\n  }\n  ```\n\n  \n\n\u3002", "top": 0, "createdAt": 1741237335, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-03-06", "dateLabelColor": "#0969da"}, "P37": {"htmlDir": "docs/post/su-shu-pan-ding.html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "\u7d20\u6570\u5224\u5b9a", "postUrl": "post/su-shu-pan-ding.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/37", "commentNum": 0, "wordCount": 1457, "description": "**\u56db\u5927\u5224\u5b9a\u6cd5**\n![Image](https://github.com/user-attachments/assets/e2849b70-739e-46b1-90df-16eb1d9dfecd)\n\n1. \u8bd5\u9664\u6cd5\n\n   ```java\n   boolean prime(int v) {\n       if(v < 2) return false;\n       if(v == 2) return true;\n       if(v % 2 == 0) return false;\n       for(int i = 3;i * i <= v;i += 2) {\n           if(v % i == 0) return false;\n       }\n       return true;\n   }\n   ```\n\n2. \u57c3\u6c0f\u7b5b\n\n   **[[\u8be6\u89e3](https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95)](https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95)**\n\n   ```java\n   /***\n    * \n    * @param n \u6c42[2 - n]\u8303\u56f4\u5185\u7684\u7d20\u6570\n    * @return boolean\u6570\u7ec4\uff0cfalse\u5219\u4e3a\u7d20\u6570\n    */\n   boolean[] eratosthenes(int n) {\n       int g = (int) Math.sqrt(n);\n       boolean[] b = new boolean[n + 1];\n       for(int i = 2;i <= n;++i) {\n           if(!b[i]) {\n               if(i > g) break;\n               for(int k = i * i;k <= n;k += i) {\n                   b[k] = true;\n               }\n           }\n       }\n       return b;\n   }\n   ```\n\n3. \u6b27\u62c9\u7b5b\n\n   ```java\n   static List<Integer> ps = new ArrayList<>();\n   static boolean[] b = new boolean[10001];\n   static {\n       b[0] = b[1] = true;\n       for(int i = 2;i <= 10000;i++) {\n           if(!b[i]) ps.add(i);\n           for(int p : ps) {\n               if(i * p > 10000) break;\n               b[i * p] = true;\n               if(i % p == 0) break;\n           }\n       }\n   }\n   ```\n\n4. Miller-Rabin\u3002", "top": 0, "createdAt": 1742282981, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-03-18", "dateLabelColor": "#0969da"}, "P38": {"htmlDir": "docs/post/LIS-you-hua-(nlogn).html", "labels": ["\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"], "postTitle": "LIS\u4f18\u5316(nlogn)", "postUrl": "post/LIS-you-hua-%28nlogn%29.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/38", "commentNum": 0, "wordCount": 440, "description": "**\u793a\u4f8b\uff1a**$[3,1,5,6,4,2]$\n\n**\u5b9a\u4e49\uff1a**$f[i]$\u5b9a\u4e49\u4e3a\u957f\u5ea6\u4e3a$i$\u7684\u5b50\u5e8f\u5217\u53f3\u7aef\u70b9\u6700\u5c0f\u503c\n\n**\u6a21\u62df\uff1a**\n\n$i=0$\uff1a\n\n> $f[1]$ = 3\n\n$i=1$\uff1a\n\n> $f[1]=1$\n\n$i=2$\uff1a\n\n> $f[1]=1$\uff0c$f[2]=5$\n\n$i=3$\uff1a\n\n> $f[1]=1$\uff0c$f[2]=5$\uff0c$f[3]=6$\n\n$i=4$\uff1a\n\n> $f[1]=1$\uff0c$f[2]=4$\uff0c$f[3]=6$\n\n$i=5$\uff1a\n\n> $f[1]=1$\uff0c$f[2]=2$\uff0c$f[3]=6$\n\n**\u7591\u60d1\uff1a**\n\n- \u4e3a\u4ec0\u4e48\u662f$f[i]$\u662f\u9012\u589e\u7684\uff1f\n\n  > \u89c2\u5bdf\u6a21\u62df\u8fc7\u7a0b\uff0c\u8d2a\u5fc3\u5730\u7ef4\u62a4$f[i]$\u7684\u6700\u5c0f\u503c\uff0c\n  >\n  > \u8003\u8651$nums[i]$\uff0c\u82e5$nums[i]>f[k]$ \u4e14$nums[i]<f[k+1]$\uff0c\n  >\n  > \u5219\u53ef\u4ee5\u66ff\u6362$f[k+1]$\u4e3a$nums[i]$\uff0c\n  >\n  > \u56e0\u4e3a$f[k+1]$\u662f\u57fa\u4e8e$f[k]$\u6784\u5efa\u7684\u957f\u5ea6\u4e3a$k+1$\u7684\u5e8f\u5217\u3002", "top": 0, "createdAt": 1743714408, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-04-04", "dateLabelColor": "#0969da"}, "P39": {"htmlDir": "docs/post/sharding-jdbc-fen-ku-fen-biao.html", "labels": ["documentation", "java"], "postTitle": "sharding-jdbc\u5206\u5e93\u5206\u8868", "postUrl": "post/sharding-jdbc-fen-ku-fen-biao.html", "postSourceUrl": "https://github.com/iamdurant/iamdurant.github.io/issues/39", "commentNum": 0, "wordCount": 11214, "description": "##### \u5206\u5e93\u5206\u8868\n\n- \u5782\u76f4\u5206\u8868\n\n  > \u5c06\u9891\u7e41\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0e\u8bbf\u95ee\u7387\u8f83\u4f4e\u7684\u5c5e\u6027,\u62c6\u5206\u5230\u4e24\u5f20\u8868\n\n- \u5782\u76f4\u5206\u5e93\n\n  > \u5c06\u4e0d\u76f8\u5173\u7684\u4e1a\u52a1\u5b9e\u4f53,\u62c6\u5206\u5230\u4e24\u4e2a\u6570\u636e\u5e93\n\n- \u6c34\u5e73\u5206\u5e93\n\n  > \u5c06\u8868\u6570\u636e\u5212\u5206\u5230\u4e0d\u540c\u7684\u6570\u636e\u5e93\n\n- \u6c34\u5e73\u5206\u8868\n\n  > \u5c06\u8868\u6c34\u5e73\u62c6\u5206\u6210\u591a\u4e2a\u8868\n\n\n\n#####  sharding-jdbc-sql\u6267\u884c\u8fc7\u7a0b\n\n1. \u89e3\u6790\n2. \u6539\u5199\n3. \u8def\u7531\n4. \u6267\u884c\n5. \u5f52\u5e76\n\n\n\n##### \u6c34\u5e73\u5206\u8868demo\n\n**\u6c34\u5e73\u5206\u8868**\n\n`sql`\u51c6\u5907,\u521b\u5efa\u4e24\u5f20\u8868: `t_order_1`,`t_order_2`\n\n```sql\ncreate table t_order_2(\n\t`id` bigint primary key comment '\u8ba2\u5355id',\n    `product_id` bigint not null comment '\u5546\u54c1id',\n    `amount` int not null comment '\u8d2d\u4e70\u6570\u91cf',\n    `buyer_id` bigint not null comment '\u8d2d\u4e70\u8005id',\n    `create_date` datetime not null comment '\u4e0b\u5355\u65f6\u95f4',\n    `status` int not null default 0 comment '\u8ba2\u5355\u72b6\u6001 0: \u672a\u652f\u4ed8, 1: \u5df2\u652f\u4ed8, 2: \u8d85\u65f6, 3: \u53d6\u6d88, 4: \u5176\u4ed6',\n    `pay_time` datetime null comment '\u652f\u4ed8\u65f6\u95f4'\n) engine=innodb default charset=utf8mb4 comment='\u8ba2\u5355\u88682';\n```\n\n`maven`\u4f9d\u8d56\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n        <version>2.7.15</version>\n        <exclusions>\n            <exclusion>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n            </exclusion>\n            <exclusion>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-starter-logging</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n\n    <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>1.18.34</version>\n    </dependency>\n\n    <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>8.0.30</version>\n    </dependency>\n\n    <dependency>\n        <groupId>com.baomidou</groupId>\n        <artifactId>mybatis-plus-boot-starter</artifactId>\n        <version>3.5.5</version>\n        <exclusions>\n            <exclusion>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n\n    <dependency>\n        <groupId>com.github.xiaoymin</groupId>\n        <artifactId>knife4j-openapi2-spring-boot-starter</artifactId>\n        <version>4.2.0</version>\n    </dependency>\n\n    <dependency>\n        <groupId>org.apache.shardingsphere</groupId>\n        <artifactId>sharding-jdbc-spring-boot-starter</artifactId>\n        <version>4.1.1</version>\n    </dependency>\n\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-logging</artifactId>\n        <version>2.7.15</version>\n    </dependency>\n</dependencies>\n\n<properties>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n</properties>\n```\n\n`yaml`\u914d\u7f6e\n\n```yaml\nserver:\n  port: 8888\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n\nspring:\n  # sharding-jdbc \u914d\u7f6e\n  shardingsphere:\n    datasource:\n      names: m1\n      m1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/sharding_jdbc_demo?serverTimezone=UTC\n        username: root\n        password: pubgM666\n    sharding:\n      tables:\n        t_order:\n          actual-data-nodes: m1.t_order_$->{1..2}\n          table-strategy:\n            inline:\n              sharding-column: id\n              algorithm-expression: t_order_$->{id % 2 + 1}\n          key-generator:\n            column: id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 100\n              max:\n                tolerate:\n                  time:\n                    difference:\n                      milliseconds: 20\n```\n\n**\u7ec6\u8282**\n\n1. \u96ea\u82b1\u7b97\u6cd5\u751f\u6210\u7684\u5b57\u6bb5,\u5728insert\u65f6,\u9700\u8981\u81ea\u5b9a\u4e49`sql`,\u5c06\u6b21\u5b57\u6bb5\u4ece`sql`\u63d2\u5165\u5b57\u6bb5\u4e2d\u53bb\u9664:\n\n   > \u6bd4\u5982:\n   >\n   > \u5b9a\u4e49id\u5b57\u6bb5\u4e3a\u96ea\u82b1\u7b97\u6cd5\u81ea\u52a8\u751f\u6210,\u5219`insert sql`\u4e3a:\n   >\n   > ```java\n   > @Insert('insert into t_order(product_id, amount, buyer_id, create_date, status, pay_time) values(#{productId}, #{amount}, #{buyerId}, #{createDate}, #{status}, #{payTime})')\n   >  int insert(TOrder tOrder);\n   > ```\n\n2. \u4f9d\u8d56\u4e0d\u80fd\u5bfc\u9519,`sharding-jdbc`\u4f9d\u8d56:\n\n   ```xml\n   <dependency>\n       <groupId>org.apache.shardingsphere</groupId>\n       <artifactId>sharding-jdbc-spring-boot-starter</artifactId>\n       <version>4.1.1</version>\n   </dependency>\n   ```\n\n\n###### \u78b0\u5230\u7684bug\n\n1. `sharding-jdbc-spring-boot-starter`,\u65e0\u6cd5\u89e3\u6790`LocalDateTime`\u4ee5\u53ca`LocalDate`\n\n   > \u4fee\u590d: \n   >\n   > - \u4f9d\u8d56\u5347\u7ea7\n   >\n   > ```xml\n   > <dependency>\n   >     <groupId>org.apache.shardingsphere</groupId>\n   >     <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>\n   >     <version>5.2.1</version>\n   >     <exclusions>\n   >         <exclusion>\n   >             <groupId>org.yaml</groupId>\n   >             <artifactId>snakeyaml</artifactId>\n   >         </exclusion>\n   >     </exclusions>\n   > </dependency>\n   > ```\n   >\n   > - `5.x.x`\u7248\u672cyml\u914d\u7f6e\u4e0d\u540c,\u66f4\u6539\u4e3a:\n   >\n   > ```yaml\n   > spring:\n   >   shardingsphere:\n   >     datasource:\n   >       names: m1\n   >       m1:\n   >         type: com.zaxxer.hikari.HikariDataSource\n   >         driver-class-name: com.mysql.cj.jdbc.Driver\n   >         jdbc-url: jdbc:mysql://localhost:3306/sharding_jdbc_demo?serverTimezone=UTC\n   >         username: root\n   >         password: pubgM666\n   > \n   >     rules:\n   >       sharding:\n   >         tables:\n   >           t_order:\n   >             actual-data-nodes: m1.t_order_$->{1..2}\n   >             table-strategy:\n   >               standard:\n   >                 sharding-column: id\n   >                 sharding-algorithm-name: t_order_inline\n   >             key-generate-strategy:\n   >               column: id\n   >               key-generator-name: snowflake\n   > \n   >         sharding-algorithms:\n   >           t_order_inline:\n   >             type: INLINE\n   >             props:\n   >               algorithm-expression: t_order_$->{id % 2 + 1}\n   > \n   >         key-generators:\n   >           snowflake:\n   >             type: SNOWFLAKE\n   >             props:\n   >               worker-id: 100\n   >               max-tolerate-time-difference-milliseconds: 20\n   > \n   >     props:\n   >       sql-show: true   # \u5f00\u542fSQL\u6253\u5370\uff0c\u65b9\u4fbf\u8c03\u8bd5\n   > ```\n\n2. `mybatis-plus`\u4e0e`sharding-jdbc`\u7684\u4e0d\u517c\u5bb9\n\n   >  \u89e3\u51b3: `sql`\u90fd\u4f7f\u7528`mapper`\u65b9\u5f0f\u5b9a\u4e49,\u4e0d\u4f7f\u7528`mybatis-plus`\n\n\n#####  \u6c34\u5e73\u5206\u5e93demo\n\n**`yml`\u914d\u7f6e:**\n\n```yaml\nspring:\n  shardingsphere:\n    datasource:\n      names: m1, m2\n      m1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/sharding_jdbc_demo?serverTimezone=UTC\n        username: root\n        password: pubgM666\n      m2:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://localhost:3306/sharding_jdbc_demo2?serverTimezone=UTC\n        username: root\n        password: pubgM666\n\n    rules:\n      sharding:\n        tables:\n          t_order:\n            actual-data-nodes: m$->{1..2}.t_order_$->{1..2}\n            database-strategy:\n              standard:\n                sharding-column: product_id\n                sharding-algorithm-name: t_order_database_inline\n            table-strategy:\n              standard:\n                sharding-column: id\n                sharding-algorithm-name: t_order_inline\n            key-generate-strategy:\n              column: id\n              key-generator-name: snowflake\n\n        sharding-algorithms:\n          t_order_inline:\n            type: INLINE\n            props:\n              algorithm-expression: t_order_$->{id % 2 + 1}\n          t_order_database_inline:\n            type: INLINE\n            props:\n              algorithm-expression: m$->{product_id % 2 + 1}\n\n        key-generators:\n          snowflake:\n            type: SNOWFLAKE\n            props:\n              worker-id: 100\n              max-tolerate-time-difference-milliseconds: 20\n\n    props:\n      sql-show: true   # \u5f00\u542fSQL\u6253\u5370\uff0c\u65b9\u4fbf\u8c03\u8bd5\n```\n\n\n\n##### \u5782\u76f4\u5206\u5e93\n\n**\u6570\u636e\u5e93\u51c6\u5907**\n\n```sql\ncreate database sharding_jdbc_userdb;\n\ncreate table `user`(\n\t`id` bigint auto_increment primary key comment 'id,\u4e3b\u952e',\n    `username` varchar(16) not null comment '\u7528\u6237\u540d',\n    `encoded_password` varchar(256) not null comment '\u52a0\u5bc6\u540e\u7684\u5bc6\u7801',\n    `salt` char(16) not null comment '\u968f\u673a\u76d0',\n    `create_date` datetime not null comment '\u521b\u5efa\u65f6\u95f4'\n)engine=innodb default charset=utf8mb4 comment='\u7528\u6237\u8868';\n```\n\n\n\n##### \u5e7f\u64ad\u8868\n\n\u82e5\u5782\u76f4\u5206\u5e93\u540e,\u90e8\u5206\u5e93\u90fd\u9700\u8981\u5bf9\u67d0\u4e2a\u8868join,\u5e76\u4e14\u6b64\u8868\u6570\u636e\u8bfbu\u591a\u5199\u5c11,\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u4e3a\u516c\u544a\u8868\n\n```sql\ncreate table common(\n\t`id` bigint primary key auto_increment comment '\u4e3b\u952e',\n    `name` varchar(32) null comment '\u540d\u5b57'\n)engine=innodb default charset=utf8mb4 comment='\u516c\u5171\u8868';\n```\n\n**`yml`\u914d\u7f6e:**\n\n```yaml\nspring:\n  shardingsphere:\n    rules:\n      sharding:\n        # \u5e7f\u64ad\u8868\n        broadcast-tables:\n          common\n```\n\n##### sharding-jdbc\u8bfb\u5199\u5206\u79bb\n\n> `sharding-jdbc`\u6839\u636e`sql`\u8bed\u4e49,\u5c06\u5199\u64cd\u4f5c\u8def\u7531\u81f3`master`,\u5c06\u8bfb\u64cd\u4f5c\u8def\u7531\u81f3`slave`.\u63d0\u4f9b\u900f\u660e\u5316\u8bfb\u5199\u64cd\u4f5c,\u50cf\u4f7f\u7528\u4e00\u4e2a\u6570\u636e\u5e93\u4e00\u6837\u4f7f\u7528\u4e3b\u4ece\u6570\u636e\u5e93\u96c6\u7fa4.\n>\n> ![image-20250429231159360](http://192.168.1.101:9000/kijjqvbsoduu/imgs/image-20250429231159431.png)\n\n`yaml`\u914d\u7f6e\n\n```yaml\n    rules:\n      readwrite-splitting:\n        data-sources:\n          m0_group:\n            static-strategy:\n              write-data-source-name: m0\n              read-data-source-names:\n                - s0\n            load-balancer-name: round_robin\n        load-balancers:\n          round_robin:\n            type: ROUND_ROBIN\n      sharding:\n        # \u5e7f\u64ad\u8868\n        broadcast-tables:\n          common\n        tables:\n          user:\n            actual-data-nodes: m0_group.user\n```\n\n##### \u5b9e\u8df5\n\n**\u63cf\u8ff0:**\n\n\u4ee5\u5546\u54c1\u4e3a\u4f8b,\u8fdb\u884c\u5b9e\u8df5.\n\n###### \u6570\u636e\u5e93\u8bbe\u8ba1\n\n>  *entity:*\n>\n>  - \u5546\u54c1\n>  - \u5e97\u94fa\n>  - \u5730\u7406\u533a\u57df\n>\n>  *\u5782\u76f4\u5206\u5e93:*\n>\n>  \u5c06\u5546\u54c1\u4ee5\u53ca\u5e97\u94fa\u5212\u5206\u5230product_db,store_db\n>\n>  *\u5782\u76f4\u5206\u8868:*\n>\n>  \u5c06\u5546\u54c1\u4fe1\u606f\u5212\u5206\u4e3aproduct_info,product_desc\n>\n>  *\u5e7f\u64ad\u8868:*\n>\n>  region\n>\n>  *\u6c34\u5e73\u5206\u5e93:*\n>\n>  \u5c06product_db\u6839\u636estore_id\u5206\u5e93\n>\n>  *\u6c34\u5e73\u5206\u8868:*\n>\n>  \u5c06product_info\u6839\u636eproduct_id\u5206\u8868\n\n###### sql\u51c6\u5907\n\nproduct_info\n\n```sql\ncreate database product_db_1;\ncreate database product_db_2;\n\ncreate table product_info_1(\n\t`id` bigint primary key comment '\u5546\u54c1id',\n    `store_id` bigint not null comment '\u6240\u5c5e\u5e97\u94faid',\n    `name` varchar(64) not null comment '\u5546\u54c1\u540d\u79f0',\n    `specification` varchar(8) not null comment '\u89c4\u683c',\n    `source_place` varchar(16) null comment '\u4ea7\u5730',\n    `price` decimal not null comment '\u4ef7\u683c',\n    `pic_url` varchar(200) not null comment '\u56fe\u7247url'\n) engine=innodb default charset=utf8mb4 comment='\u5546\u54c1\u4fe1\u606f\u8868';\n```\n\nproduct_desc\n\n```sql\ncreate table product_desc_1(\n\t`id` bigint auto_increment primary key comment 'id',\n    `product_id` bigint not null comment '\u5546\u54c1id',\n    `store_id` bigint not null comment '\u5e97\u94faid',\n    `desc` text not null comment '\u5546\u54c1\u63cf\u8ff0'\n) engine=innodb default charset=utf8mb4 comment '\u5546\u54c1\u63cf\u8ff0\u8868';\n```\n\nstore\n\n```sql\ncreate databse store_db;\n\ncreate table store(\n\t`id` bigint primary key auto_increment comment '\u5e97\u94faid',\n    `name` varchar(32) not null comment '\u5e97\u94fa\u540d\u79f0',\n    `score` float null default 0 comment '\u5e97\u94fa\u8bc4\u5206',\n    `source_place_id` bigint not null comment '\u5e97\u94fa\u6240\u5728\u5730'\n) engine=innodb default charset=utf8mb4 comment '\u5e97\u94fa\u4fe1\u606f\u8868';\n```\n\nregion\n\n```sql\ncreate table region(\n\t`id` bigint primary key auto_increment comment 'id',\n    `code` bigint not null comment '\u5730\u57df\u7f16\u7801',\n    `name` varchar(32) not null comment '\u5730\u7406\u533a\u57df\u540d\u79f0',\n    `level` int not null comment '\u7ea7\u522b,\u7701:1 \u5e02:2 \u53bf:3 \u9547:4',\n    `parent` bigint null comment '\u4e0a\u7ea7\u5730\u7406\u533a\u57df'\n) engine=innodb default charset=utf8mb4 comment '\u5730\u57df\u4fe1\u606f\u8868';\n```\n\n\u3002", "top": 0, "createdAt": 1746827555, "style": "", "script": "", "head": "", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "createdDate": "2025-05-10", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "B\u6811": "#5F3FBA", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "java": "#99EB51", "markdown": "#A9F0D7", "mysql": "#01B4CE", "question": "#d876e3", "wontfix": "#ffffff", "yaml": "#10F657", "\u54c8\u5e0c\u8868": "#D93F0B", "\u57fa\u7840": "#6A60E7", "\u5b66\u4e60": "#D4C5F9", "\u6392\u5e8f\u7b97\u6cd5": "#d93f0b", "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5": "#EDD010", "\u8fdb\u9636": "#58DA3C", "\u9605\u8bfb": "#1d76db", "\u9ed1\u9a6c": "#fbca04"}, "displayTitle": "jasper", "faviconUrl": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "ogImage": "https://assets.leetcode.cn/aliyun-lc-upload/users/tender-satoshino0/avatar_1730782842.png?x-oss-process=image%2Fformat%2Cwebp", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://iamdurant.github.io", "prevUrl": "/page3.html", "nextUrl": "disabled"}